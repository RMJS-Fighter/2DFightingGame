{"ast":null,"code":"var _jsxFileName = \"/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\n\nfunction GameWindow(props) {\n  _s();\n\n  const canvasRef = useRef();\n\n  const loaded = () => {\n    let canvasDisplay = new CanvasDisplay();\n    let ctx = canvasDisplay.ctx;\n    let player1 = canvasDisplay.createPlayer1;\n    let player2 = canvasDisplay.createPlayer2;\n    let specialP1 = canvasDisplay.createSpecialP1;\n    let specialP2 = canvasDisplay.createSpecialP2;\n    let bloodP1 = canvasDisplay.createBloodP1;\n    let bloodP2 = canvasDisplay.createBloodP2;\n    let shieldP1 = canvasDisplay.createShieldP1;\n    let shieldP2 = canvasDisplay.createShieldP2;\n    let attackP1 = canvasDisplay.createAttackP1;\n    let attackP2 = canvasDisplay.createAttackP2;\n    let attackDropP1 = canvasDisplay.createAttackDropP1;\n    let attackDropP2 = canvasDisplay.createAttackDropP2;\n    let platform = canvasDisplay.createPlatform;\n    let stage = canvasDisplay.createFloor;\n    let leftWall = canvasDisplay.createLeftWall;\n    let rightWall = canvasDisplay.createRightWall;\n    let gameObjects = [canvasDisplay.createPlatform, canvasDisplay.createFloor, canvasDisplay.createLeftWall, canvasDisplay.createRightWall, canvasDisplay.createSpecialP1, canvasDisplay.createSpecialP2, canvasDisplay.createAttackP1, canvasDisplay.createAttackP2];\n  };\n\n  useEffect(() => {\n    playGame();\n  });\n\n  class SpecialEffects {\n    constructor(player, w, h, img, numberWide, numberTall) {\n      this.x = player.x;\n      this.y = -1000;\n      this.w = w;\n      this.h = h;\n      this.img = img;\n      this.sx = 0;\n      this.sy = 0;\n\n      const reSize = () => {\n        this.sw = img.width / numberWide;\n        this.sh = img.height / numberTall;\n      };\n\n      this.numberWide = numberWide;\n      this.numberTall = numberTall;\n      reSize();\n      img.onload = reSize;\n    }\n\n    draw(ctx) {\n      //animate blood\n      if (this.img == blood) {\n        if (frame % 8 == 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx > this.sw * 2 && this.sy == 0) {\n          this.sx = 0;\n          this.sy = this.sh;\n        } else if (this.sx > this.sw * 2 && this.sy == this.sh) {\n          this.y = -1000;\n        }\n      } else if (this.img == shield) {\n        if (frame % 4 == 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx > this.sw * 6) {\n          this.sx = this.sw * 4;\n        }\n      } else if (this.img = attack) {\n        if (frame % 4 == 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx > this.sw) {\n          this.sx = 0;\n        }\n      } //actually drawing\n\n\n      ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n    }\n\n    update(ctx) {\n      this.draw(ctx);\n    }\n\n  }\n\n  class Player {\n    constructor(x, y, w, h, img, rImg, direction) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n      this.velX = 0;\n      this.velY = 0;\n      this.speed = 5;\n      this.jumping = false;\n      this.grounded = false;\n      this.img = img;\n      this.rImg = rImg;\n      this.sx = 0; //frame of animation\n\n      const reSize = () => {\n        this.sy = img.height / 5; //animation type\n\n        this.sw = img.width / 10;\n        this.sh = img.height / 5;\n      };\n\n      reSize();\n      img.onload = reSize;\n      this.numberTall = 5;\n      this.numberWide = 10;\n      this.health = 100;\n      this.special = 0;\n      this.keepLooping = true;\n      this.direction = direction;\n      this.blocking = false;\n    }\n\n    draw(ctx) {\n      //dead\n      if (frame % 3 == 0 && this.special < 100) {\n        this.special = this.special + 2;\n\n        if (this.img == cat) {\n          document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n        } else {\n          document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n        }\n      }\n\n      if (this.sy == 0 && frame % 20 == 0) {\n        this.sx += this.sw;\n      } // Idle-foolishness\n      // if (this.sy == this.sh*3 && frame % 10 == 0){\n      //   this.sx += this.sw\n      // }\n\n\n      if (this.sy == this.sh * 4 && frame % 5 == 0) {\n        this.sx += this.sw;\n      }\n\n      if (this.sx >= (this.numberWide - 1) * this.sw) {\n        if (this.keepLooping) {\n          this.sx = 0;\n        } else {\n          this.sx = (this.numberWide - 1) * this.sw;\n        }\n      }\n\n      if (this.direction == \"left\") {\n        ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      } else {\n        ctx.drawImage(this.rImg, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      }\n    }\n\n    update(ctx) {\n      this.draw(ctx);\n      this.lowHealth();\n    }\n\n    jump() {\n      this.velY = -this.speed * 2;\n      this.y = this.y + this.velY;\n      this.fall();\n    }\n\n    dead() {\n      this.numberWide = 10; //how many dead frames you have\n\n      this.sy = 0;\n      this.keepLooping = false;\n    }\n\n    fall() {\n      this.numberWide = 8;\n      this.sy = this.sh;\n    }\n\n    hurt() {\n      this.numberWide = 10;\n      this.sy = this.sh * 2;\n    }\n\n    idle() {\n      this.numberWide = 10;\n      this.sy = this.sh * 3;\n    }\n\n    run() {\n      this.numberWide = 8;\n      this.sy = this.sh * 4;\n    }\n\n    moveRight() {\n      if (this.velX < 0) {\n        this.velX = 0;\n      }\n\n      if (this.velX < this.speed) {\n        this.velX = this.velX + 4;\n      }\n\n      this.x += this.velX;\n      this.direction = \"right\";\n    }\n\n    moveLeft() {\n      if (this.velX > 0) {\n        this.velX = 0;\n      }\n\n      if (this.velX > -this.speed) {\n        this.velX = this.velX - 4;\n      }\n\n      this.x += this.velX;\n      this.direction = \"left\";\n    }\n\n    receiveDamageP1(multiplier) {\n      if (this.blocking == false) {\n        this.health -= 10 * multiplier; // hit1Sound.play();\n\n        if (player2.direction == \"right\") {\n          this.y -= this.h * 1;\n          this.x += this.w;\n        } else {\n          this.y -= this.h * 1;\n          this.x -= this.w;\n        }\n      } else {\n        this.health -= 2 * multiplier; // hit2Sound.play();\n      }\n\n      bloodP1.sx = 0;\n      bloodP1.sy = 0;\n      bloodP1.y = this.y;\n      bloodP1.x = this.x;\n\n      if (this.health < 50) {\n        document.querySelector(\"#hp-1\").style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        document.querySelector(\".player1\").style.cssText = \"animation: healthGlow 2s infinite;\";\n      }\n\n      document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n    }\n\n    receiveDamageP2(multiplier) {\n      if (this.blocking == false) {\n        this.health -= 10 * multiplier; // hit3Sound.play();\n\n        if (player1.direction == \"right\") {\n          this.y -= this.h * 1;\n          this.x -= this.w;\n        } else {\n          this.y -= this.h * 1;\n          this.x -= this.w;\n        }\n      } else {\n        // hit4Sound.play();\n        this.health -= 2 * multiplier;\n      }\n\n      bloodP2.sx = 0;\n      bloodP2.sy = 0;\n      bloodP2.y = this.y;\n      bloodP2.x = this.x;\n\n      if (this.health < 50) {\n        document.querySelector(\"#hp-2\").style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        document.querySelector(\".player2\").style.cssText = \"animation: healthGlow 2s infinite;\";\n      }\n\n      document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n    }\n\n    drawBlockP1() {\n      shieldP1.sx = shieldP1.sw * 4;\n      shieldP1.sy = 0;\n      shieldP1.y = this.y - this.h * 1.5;\n      shieldP1.x = this.x - this.w * 1.2;\n      this.blocking = true;\n    }\n\n    drawBlockP2() {\n      shieldP2.sx = shieldP2.sw * 4;\n      shieldP2.sy = 0;\n      shieldP2.y = this.y - this.h * 1.5;\n      shieldP2.x = this.x - this.w * 1.05;\n      this.blocking = true;\n    }\n\n    lowHealth() {\n      if (this.health <= 40) {\n        let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n        lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n      }\n    }\n\n  }\n\n  class SpecialAttack {\n    constructor(x, y, w, h, img, img2) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n      this.img = img;\n      this.img2 = img2;\n      this.sx = 0;\n      this.sy = 0;\n\n      const reSize = () => {\n        this.sw = 786 / 5;\n        this.sh = 151;\n      };\n\n      reSize();\n      img.onload = reSize;\n      img2.onload = reSize;\n      this.direction = null;\n    }\n\n    update(ctx) {\n      this.drawAttack(ctx);\n    }\n\n    drawAttack(ctx) {\n      if (frame % 5 == 0) {\n        this.sx += this.sw;\n      }\n\n      if (this.sx > this.sw * 4) {\n        this.sx = 0;\n      }\n\n      if (this.direction == \"right\") {\n        this.x += 8;\n      } else {\n        this.x -= 8;\n      }\n\n      if (this.direction == \"right\") {\n        ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      } else {\n        ctx.drawImage(this.img2, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      }\n    }\n\n    reset(player) {\n      this.direction = player.direction;\n\n      if (this.direction == \"right\") {\n        this.x = player.x + player.w;\n      } else {\n        this.x = player.x - player.w;\n      }\n\n      this.y = player.y;\n    }\n\n  }\n\n  class Beautify {\n    constructor(x, y, w, h, img) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n      this.img = img;\n    }\n\n    draw(ctx) {\n      ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n    }\n\n    update(ctx) {\n      this.draw(ctx);\n    }\n\n    reset(player) {\n      this.direction = player.direction;\n\n      if (this.direction == \"right\") {\n        this.x = player.x + player.w * 0.5;\n      } else {\n        this.x = player.x - player.w * 0.5;\n      }\n\n      this.y = player.y;\n    }\n\n  }\n\n  class Barrier {\n    constructor(x, y, w, h, img) {\n      this.x = x;\n      this.y = y;\n      this.w = w;\n      this.h = h;\n      this.img = img;\n    }\n\n    draw(ctx) {\n      ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n    }\n\n    update(ctx) {\n      this.draw(ctx);\n    }\n\n  }\n\n  class CanvasDisplay {\n    constructor() {\n      this.canvas = canvasRef.current;\n      this.ctx = this.canvas.getContext(\"2d\");\n      this.stageConfig = {\n        width: 1000,\n        height: 500\n      }; //create game objects to manipulate\n\n      this.canvas.width = this.stageConfig.width;\n      this.canvas.height = this.stageConfig.height;\n      this.createFloor = new Barrier(-100, this.stageConfig.height * 0.9, this.stageConfig.width * 1.2, 50, floor);\n      this.createLeftWall = new Barrier(-800, 0, 800, this.stageConfig.height, floor);\n      this.createRightWall = new Barrier(1000, 0, 800, this.stageConfig.height, floor);\n      this.createPlatform = new Barrier(this.stageConfig.width * 0.4, this.stageConfig.height * 0.6, 200, 50, platform2);\n      this.createPlayer1 = new Player(30, 50, 100, 100, dog, dogReverse, \"right\");\n      this.createPlayer2 = new Player(855, 50, 100, 100, cat, catReverse, \"left\");\n      this.createSpecialP1 = new SpecialAttack(2000, 2000, 100, 100, bloodBoltR, bloodBoltL);\n      this.createSpecialP2 = new SpecialAttack(2500, 2000, 100, 100, bloodBoltR, bloodBoltL);\n      this.createBloodP1 = new SpecialEffects(this.createPlayer1, 100, 100, blood, 3, 2);\n      this.createBloodP2 = new SpecialEffects(this.createPlayer2, 100, 100, blood, 3, 2);\n      this.createShieldP1 = new SpecialEffects(this.createPlayer1, 250, 350, shield, 17, 1);\n      this.createShieldP2 = new SpecialEffects(this.createPlayer2, 250, 350, shield, 17, 1);\n      this.createAttackP1 = new SpecialEffects(this.createPlayer1, 50, 50, attack, 2, 1);\n      this.createAttackP2 = new SpecialEffects(this.createPlayer2, 50, 50, attack, 2, 1);\n      this.createTree = new Beautify(-2, 255, 200, 200, tree);\n      this.createTree2 = new Beautify(800, 255, 200, 200, tree);\n      this.createBox = new Beautify(400, 250, 50, 50, box);\n      this.createBirds = new Beautify(900, 55, 100, 100, birds);\n      this.createShrooms = new Beautify(400, 410, 50, 50, shrooms);\n      this.createFlowers = new Beautify(920, 405, 50, 50, flowers);\n      this.createFlowers2 = new Beautify(200, 405, 50, 50, flowers);\n      this.createAttackDropP1 = new Beautify(this.createAttackP1.x, this.createAttackP1.y, 100, 100, attackDrop);\n      this.createAttackDropP2 = new Beautify(this.createAttackP2.x, this.createAttackP2.y, 100, 100, attackDrop);\n    }\n\n    animate() {\n      //Update canvas\n      this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height); //Beautify stuffff\n\n      this.createTree.update(this.ctx);\n      this.createTree2.update(this.ctx);\n      this.createBox.update(this.ctx);\n      this.createBirds.update(this.ctx);\n      this.createShrooms.update(this.ctx);\n      this.createFlowers.update(this.ctx);\n      this.createFlowers2.update(this.ctx); //End stuffff\n\n      this.createFloor.update(this.ctx);\n      this.createLeftWall.update(this.ctx);\n      this.createRightWall.update(this.ctx);\n      this.createPlatform.update(this.ctx);\n      this.createPlayer1.update(this.ctx);\n      this.createPlayer2.update(this.ctx);\n      this.createSpecialP1.update(this.ctx);\n      this.createSpecialP2.update(this.ctx);\n      this.createBloodP1.update(this.ctx);\n      this.createBloodP2.update(this.ctx);\n      this.createShieldP1.update(this.ctx);\n      this.createShieldP2.update(this.ctx);\n      this.createAttackP1.update(this.ctx);\n      this.createAttackP2.update(this.ctx);\n      this.createAttackDropP1.update(this.ctx);\n      this.createAttackDropP2.update(this.ctx);\n    }\n\n  }\n\n  function colCheck(shapeA, shapeB) {\n    // get the vectors to check against\n    var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n        vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n        // add the half widths and half heights of the objects\n    hWidths = shapeA.w / 2 + shapeB.w / 2,\n        hHeights = shapeA.h / 2 + shapeB.h / 2,\n        colDir = null; // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n\n    if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n      // figures out on which side we are colliding (top, bottom, left, or right)\n      var oX = hWidths - Math.abs(vX),\n          oY = hHeights - Math.abs(vY);\n\n      if (shapeB == attackP1 || shapeB == attackP2) {\n        colDir = \"a\";\n      } else {\n        if (oX >= oY) {\n          if (vY > 0) {\n            colDir = \"t\";\n            shapeA.y += oY;\n          } else {\n            colDir = \"b\";\n            shapeA.y -= oY;\n          }\n        } else {\n          if (vX > 0) {\n            colDir = \"l\";\n            shapeA.x += oX;\n          } else {\n            colDir = \"r\";\n            shapeA.x -= oX;\n          }\n        }\n      }\n\n      return colDir;\n    }\n  }\n\n  let timeToDissapear = 100;\n  let timeToDissapear1 = 100;\n  let interval = null;\n  let frame = 0;\n  let playerDied = 0; /////////////////////////////////////\n  //////////// Play Game //////////////\n  /////////////////////////////////////\n\n  function playGame() {\n    /////////\n    /////Fix On load issues for player 1 \n    shieldP1.sh = shieldP1.img.height / shieldP1.numberTall;\n    bloodP1.sh = bloodP1.img.height / bloodP1.numberTall;\n    bloodP1.sw = bloodP1.img.width / bloodP1.numberWide;\n    shieldP1.sw = shieldP1.img.width / shieldP1.numberWide;\n    /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n          then execute move functions in class--- */\n\n    if (playerDied == 1) {\n      //   setTimeout(killSound.play(), 1000);\n      //   gameOverSound.play();\n      playerDied++;\n    }\n\n    if (keys[74] && player2.special >= 100) {\n      //special attack\n      //   bloodBlastSound.play();\n      specialP1.reset(player1);\n      player2.special = 0;\n    }\n\n    if (keys[76] && player2.special > 25) {\n      //attack\n      //   attackSound.play();\n      player2.special -= 25;\n\n      if (player1.direction == \"right\") {\n        attackP1.y = player1.y + player1.h / 4;\n        attackP1.x = player1.x + player1.w * 0.8;\n      } else {\n        attackP1.y = player1.y + player1.h / 4;\n        attackP1.x = player1.x - player1.w * 0.4;\n      }\n\n      timeToDissapear1 = 100;\n      attackDropP1.reset(player1);\n    } else {\n      timeToDissapear1 -= 4;\n\n      if (timeToDissapear1 == 0) {\n        attackDropP1.y = -1000;\n        timeToDissapear1 = 100;\n      }\n\n      attackP1.y = -1000;\n    }\n\n    if (keys[37]) {\n      leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n      if (player1.x - 30 > 0) {\n        player1.moveLeft();\n      }\n    }\n\n    if (keys[39]) {\n      rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n      if (player1.x < 1365) {\n        player1.moveRight();\n      }\n    }\n\n    if (keys[38]) {\n      upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n      if (player1.y - player1.h > 0) {\n        if (!player1.jumping && player1.grounded) {\n          player1.grounded = false;\n          player1.jump();\n        }\n      }\n    }\n\n    if (keys[40] && player2.special > 10) {\n      downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n      shieldP1.x = player1.x;\n      shieldP1.y = player1.y;\n      player1.drawBlockP1();\n      player1.blocking = true;\n      player2.special -= 2;\n    } else {\n      shieldP1.y = -1000;\n      player1.blocking = false;\n    } //PLAYER2\n\n\n    if (keys[50] && player1.special >= 100) {\n      //   bloodyBlastSound.play();\n      specialP2.reset(player2);\n      player1.special = 0;\n      console.log(\"i pressed it!\");\n    }\n\n    if (keys[51] && player1.special > 25) {\n      //   attackSound.play();\n      player1.special -= 25; //attack\n\n      if (player2.direction == \"right\") {\n        attackP2.y = player2.y + player2.h / 4;\n        attackP2.x = player2.x + player2.w * 0.8;\n      } else {\n        attackP2.y = player2.y + player2.h / 4;\n        attackP2.x = player2.x - player2.w * 0.4;\n      }\n\n      timeToDissapear = 100;\n      attackDropP2.reset(player2);\n    } else {\n      timeToDissapear -= 4;\n\n      if (timeToDissapear == 0) {\n        attackDropP2.y = -1000;\n        timeToDissapear = 100;\n      }\n\n      attackP2.y = -1000;\n    }\n\n    player1.velY += gravity;\n    player1.velX *= friction;\n    player1.grounded = false;\n\n    if (keys[65]) {\n      aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n      player2.moveLeft();\n    }\n\n    if (keys[68]) {\n      ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n      player2.moveRight();\n    }\n\n    if (keys[87]) {\n      wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n      if (!player2.jumping && player2.grounded) {\n        player2.grounded = false;\n        player2.jump();\n      }\n    }\n\n    if (keys[83] && player1.special > 10) {\n      sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n      player2.drawBlockP2();\n      player2.blocking = true;\n      player1.special -= 2;\n    } else {\n      shieldP2.y = -1000;\n      player2.blocking = false;\n    }\n\n    if (keys[77]) {//   if (backgroundMusic.muted == false) backgroundMusic.muted = true;\n      //   else {\n      //     backgroundMusic.muted = false;\n      //   }\n    }\n\n    player2.velY += gravity;\n    player2.velX *= friction;\n    player2.grounded = false;\n\n    for (var i = 0; i < gameObjects.length; i++) {\n      var dir = colCheck(player1, gameObjects[i]);\n\n      if (i < 4) {\n        if (dir === \"l\" || dir === \"r\") {\n          player1.velX = 0;\n          player1.jumping = false;\n        } else if (dir === \"b\") {\n          player1.grounded = true;\n          player1.jumping = false;\n        } else if (dir === \"t\") {\n          player1.velY *= -1;\n        }\n      } else if (i == 5) {\n        if (dir != null) {\n          player1.receiveDamageP1(3);\n          specialP2.y = -500;\n        }\n      } else if (i == 7) {\n        if (dir != null) {\n          player1.receiveDamageP1(1);\n        }\n      }\n    }\n\n    if (player1.grounded) {\n      player1.velY = 0;\n      player1.idle();\n    }\n\n    player1.x += player1.velX;\n    player1.y += player1.velY;\n\n    for (var i = 0; i < gameObjects.length; i++) {\n      var dir = colCheck(player2, gameObjects[i]);\n\n      if (i < 4) {\n        if (dir === \"l\" || dir === \"r\") {\n          player2.velX = 0;\n          player2.jumping = false;\n        } else if (dir === \"b\") {\n          player2.grounded = true;\n          player2.jumping = false;\n        } else if (dir === \"t\") {\n          player2.velY *= -1;\n        }\n      } else if (i == 4) {\n        if (dir != null) {\n          player2.receiveDamageP2(3);\n          specialP1.y = -500;\n        }\n      } else if (i == 6) {\n        if (dir != null) {\n          player2.receiveDamageP2(1);\n        }\n      }\n    }\n\n    if (player2.grounded) {\n      player2.velY = 0;\n      player2.idle();\n    }\n\n    player2.x += player2.velX;\n    player2.y += player2.velY;\n\n    if (player1.health <= 0) {\n      player1.dead();\n    }\n\n    if (player2.health <= 0) {\n      player2.dead();\n    }\n\n    if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n      player1.run();\n    }\n\n    if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n      player2.run();\n    } // if (player1.grounded == false) {\n    //   player1.fall()\n    // }\n    // if (player2.grounded == false) {\n    //   player2.fall()\n    // }\n    // player1.x\n    // player2.x\n\n\n    frame++; // gameOver();\n\n    interval = requestAnimationFrame(playGame);\n    canvasDisplay.animate();\n  } /////////////////////////////////////\n  /// Key selectors for css anims /////\n  /////////////////////////////////////\n\n\n  let leftkey = document.querySelector(\"#leftkey\");\n  let rightkey = document.querySelector(\"#rightkey\");\n  let upkey = document.querySelector(\"#upkey\");\n  let downkey = document.querySelector(\"#downkey\");\n  let aakey = document.querySelector(\"#aakey\");\n  let ddkey = document.querySelector(\"#ddkey\");\n  let wwkey = document.querySelector(\"#wwkey\");\n  let sskey = document.querySelector(\"#sskey\"); /////////////////////////////////////\n  /////// Key listeners  //////////////\n  /////////////////////////////////////\n\n  window.onkeydown = function (e) {\n    keys[e.keyCode] = true;\n  };\n\n  window.onkeyup = function (e) {\n    keys[e.keyCode] = false;\n    document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n    document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef,\n      onLoad: loaded\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 939,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameWindow, \"UJgi7ynoup7eqypjnwyX/s32POg=\");\n\n_c = GameWindow;\nexport default GameWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWindow\");","map":{"version":3,"sources":["/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js"],"names":["React","useRef","useEffect","useState","floor","platform2","dog","dogReverse","cat","catReverse","bloodBoltR","bloodBoltL","blood","shield","attack","tree","box","birds","shrooms","flowers","attackDrop","friction","gravity","keys","GameWindow","props","canvasRef","loaded","canvasDisplay","CanvasDisplay","ctx","player1","createPlayer1","player2","createPlayer2","specialP1","createSpecialP1","specialP2","createSpecialP2","bloodP1","createBloodP1","bloodP2","createBloodP2","shieldP1","createShieldP1","shieldP2","createShieldP2","attackP1","createAttackP1","attackP2","createAttackP2","attackDropP1","createAttackDropP1","attackDropP2","createAttackDropP2","platform","createPlatform","stage","createFloor","leftWall","createLeftWall","rightWall","createRightWall","gameObjects","playGame","SpecialEffects","constructor","player","w","h","img","numberWide","numberTall","x","y","sx","sy","reSize","sw","width","sh","height","onload","draw","frame","drawImage","update","Player","rImg","direction","velX","velY","speed","jumping","grounded","health","special","keepLooping","blocking","document","querySelector","style","lowHealth","jump","fall","dead","hurt","idle","run","moveRight","moveLeft","receiveDamageP1","multiplier","cssText","receiveDamageP2","drawBlockP1","drawBlockP2","lowHealthDarkBg","animation","SpecialAttack","img2","drawAttack","reset","Beautify","Barrier","canvas","current","getContext","stageConfig","createTree","createTree2","createBox","createBirds","createShrooms","createFlowers","createFlowers2","animate","clearRect","colCheck","shapeA","shapeB","vX","vY","hWidths","hHeights","colDir","Math","abs","oX","oY","timeToDissapear","timeToDissapear1","interval","playerDied","leftkey","rightkey","upkey","downkey","console","log","aakey","ddkey","wwkey","sskey","i","length","dir","requestAnimationFrame","window","onkeydown","e","keyCode","onkeyup","removeProperty"],"mappings":"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","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\n\n\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\n\n\n\n\nfunction GameWindow(props) {\n    const canvasRef=useRef();\n\n    const loaded=()=>{\n        let canvasDisplay=new CanvasDisplay();\n        \n        let ctx = canvasDisplay.ctx;\n        let player1 = canvasDisplay.createPlayer1;\n        let player2 = canvasDisplay.createPlayer2;\n        let specialP1 = canvasDisplay.createSpecialP1;\n        let specialP2 = canvasDisplay.createSpecialP2;\n        let bloodP1 = canvasDisplay.createBloodP1;\n        let bloodP2 = canvasDisplay.createBloodP2;\n        let shieldP1 = canvasDisplay.createShieldP1;\n        let shieldP2 = canvasDisplay.createShieldP2;\n        let attackP1 = canvasDisplay.createAttackP1;\n        let attackP2 = canvasDisplay.createAttackP2;\n        let attackDropP1 = canvasDisplay.createAttackDropP1;\n        let attackDropP2 = canvasDisplay.createAttackDropP2;\n        \n        let platform = canvasDisplay.createPlatform;\n        let stage = canvasDisplay.createFloor;\n        let leftWall = canvasDisplay.createLeftWall;\n        let rightWall = canvasDisplay.createRightWall;\n        \n        let gameObjects = [\n          canvasDisplay.createPlatform,\n          canvasDisplay.createFloor,\n          canvasDisplay.createLeftWall,\n          canvasDisplay.createRightWall,\n          canvasDisplay.createSpecialP1,\n          canvasDisplay.createSpecialP2,\n          canvasDisplay.createAttackP1,\n          canvasDisplay.createAttackP2,\n        ];\n    }\n\n    useEffect(()=>{\n        \n        playGame();\n    })\n    class SpecialEffects {\n        constructor(player, w, h, img, numberWide, numberTall) {\n          this.x = player.x;\n          this.y = -1000;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.sx = 0;\n          this.sy = 0;\n          const reSize = () => {\n            this.sw = img.width / numberWide;\n            this.sh = img.height / numberTall;\n          };\n          this.numberWide = numberWide;\n          this.numberTall = numberTall;\n          reSize();\n          img.onload = reSize;\n        }\n      \n        draw(ctx) {\n          //animate blood\n          if (this.img == blood) {\n            if (frame % 8 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 2 && this.sy == 0) {\n              this.sx = 0;\n              this.sy = this.sh;\n            } else if (this.sx > this.sw * 2 && this.sy == this.sh) {\n              this.y = -1000;\n            }\n          } else if (this.img == shield) {\n            if (frame % 4 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 6) {\n              this.sx = this.sw * 4;\n            }\n          } else if ((this.img = attack)) {\n            if (frame % 4 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw) {\n              this.sx = 0;\n            }\n          }\n      \n          //actually drawing\n          ctx.drawImage(\n            this.img,\n            this.sx,\n            this.sy,\n            this.sw,\n            this.sh,\n            this.x,\n            this.y,\n            this.w,\n            this.h\n          );\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n      class Player {\n        constructor(x, y, w, h, img, rImg, direction) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.velX = 0;\n          this.velY = 0;\n          this.speed = 5;\n          this.jumping = false;\n          this.grounded = false;\n          this.img = img;\n          this.rImg = rImg;\n          this.sx = 0; //frame of animation\n          const reSize = () => {\n            this.sy = img.height / 5; //animation type\n            this.sw = img.width / 10;\n            this.sh = img.height / 5;\n          };\n          reSize();\n          img.onload = reSize;\n          this.numberTall = 5;\n          this.numberWide = 10;\n          this.health = 100;\n          this.special = 0;\n          this.keepLooping = true;\n          this.direction = direction;\n          this.blocking = false;\n        }\n      \n        draw(ctx) {\n          //dead\n          if (frame % 3 == 0 && this.special < 100) {\n            this.special = this.special + 2;\n            if (this.img == cat) {\n              document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n            } else {\n              document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n            }\n          }\n      \n          if (this.sy == 0 && frame % 20 == 0) {\n            this.sx += this.sw;\n          }\n          // Idle-foolishness\n          // if (this.sy == this.sh*3 && frame % 10 == 0){\n          //   this.sx += this.sw\n          // }\n          if (this.sy == this.sh * 4 && frame % 5 == 0) {\n            this.sx += this.sw;\n          }\n      \n          if (this.sx >= (this.numberWide - 1) * this.sw) {\n            if (this.keepLooping) {\n              this.sx = 0;\n            } else {\n              this.sx = (this.numberWide - 1) * this.sw;\n            }\n          }\n          if (this.direction == \"left\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.rImg,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        update(ctx) {\n          this.draw(ctx);\n          this.lowHealth();\n        }\n        jump() {\n          this.velY = -this.speed * 2;\n          this.y = this.y + this.velY;\n          this.fall();\n        }\n        dead() {\n          this.numberWide = 10; //how many dead frames you have\n          this.sy = 0;\n          this.keepLooping = false;\n        }\n        fall() {\n          this.numberWide = 8;\n          this.sy = this.sh;\n        }\n        hurt() {\n          this.numberWide = 10;\n          this.sy = this.sh * 2;\n        }\n        idle() {\n          this.numberWide = 10;\n          this.sy = this.sh * 3;\n        }\n        run() {\n          this.numberWide = 8;\n          this.sy = this.sh * 4;\n        }\n        moveRight() {\n          if (this.velX < 0) {\n            this.velX = 0;\n          }\n          if (this.velX < this.speed) {\n            this.velX = this.velX + 4;\n          }\n          this.x += this.velX;\n          this.direction = \"right\";\n        }\n        moveLeft() {\n          if (this.velX > 0) {\n            this.velX = 0;\n          }\n          if (this.velX > -this.speed) {\n            this.velX = this.velX - 4;\n          }\n          this.x += this.velX;\n          this.direction = \"left\";\n        }\n        receiveDamageP1(multiplier) {\n          if (this.blocking == false) {\n            this.health -= 10 * multiplier;\n            // hit1Sound.play();\n            if (player2.direction == \"right\") {\n              this.y -= this.h * 1;\n              this.x += this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            this.health -= 2 * multiplier;\n            // hit2Sound.play();\n          }\n          bloodP1.sx = 0;\n          bloodP1.sy = 0;\n          bloodP1.y = this.y;\n          bloodP1.x = this.x;\n          if (this.health < 50) {\n            document.querySelector(\n              \"#hp-1\"\n            ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n            document.querySelector(\".player1\").style.cssText =\n              \"animation: healthGlow 2s infinite;\";\n          }\n          document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n        }\n        receiveDamageP2(multiplier) {\n          if (this.blocking == false) {\n            this.health -= 10 * multiplier;\n            // hit3Sound.play();\n            if (player1.direction == \"right\") {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            // hit4Sound.play();\n            this.health -= 2 * multiplier;\n          }\n      \n          bloodP2.sx = 0;\n          bloodP2.sy = 0;\n          bloodP2.y = this.y;\n          bloodP2.x = this.x;\n          if (this.health < 50) {\n            document.querySelector(\n              \"#hp-2\"\n            ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n            document.querySelector(\".player2\").style.cssText =\n              \"animation: healthGlow 2s infinite;\";\n          }\n          document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n        }\n        drawBlockP1() {\n          shieldP1.sx = shieldP1.sw * 4;\n          shieldP1.sy = 0;\n          shieldP1.y = this.y - this.h * 1.5;\n          shieldP1.x = this.x - this.w * 1.2;\n          this.blocking = true;\n        }\n        drawBlockP2() {\n          shieldP2.sx = shieldP2.sw * 4;\n          shieldP2.sy = 0;\n          shieldP2.y = this.y - this.h * 1.5;\n          shieldP2.x = this.x - this.w * 1.05;\n          this.blocking = true;\n        }\n        lowHealth() {\n          if (this.health <= 40) {\n            let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n            lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n          }\n        }\n      }\n      \n      class SpecialAttack {\n        constructor(x, y, w, h, img, img2) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.img2 = img2;\n          this.sx = 0;\n          this.sy = 0;\n          const reSize = () => {\n            this.sw = 786 / 5;\n            this.sh = 151;\n          };\n          reSize();\n          img.onload = reSize;\n          img2.onload= reSize;\n          this.direction = null;\n        }\n        update(ctx) {\n          this.drawAttack(ctx);\n        }\n        drawAttack(ctx) {\n          if (frame % 5 == 0) {\n            this.sx += this.sw;\n          }\n          if (this.sx > this.sw * 4) {\n            this.sx = 0;\n          }\n          if (this.direction == \"right\") {\n            this.x += 8;\n          } else {\n            this.x -= 8;\n          }\n          if (this.direction == \"right\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.img2,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction == \"right\") {\n            this.x = player.x + player.w;\n          } else {\n            this.x = player.x - player.w;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Beautify {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n        draw(ctx) {\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction == \"right\") {\n            this.x = player.x + player.w * 0.5;\n          } else {\n            this.x = player.x - player.w * 0.5;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Barrier {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n      \n        draw(ctx) {\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n\n    class CanvasDisplay {\n        constructor() {\n          this.canvas = canvasRef.current;\n          this.ctx = this.canvas.getContext(\"2d\");\n          this.stageConfig = {\n            width: 1000,\n            height: 500,\n          };\n      \n          //create game objects to manipulate\n          this.canvas.width = this.stageConfig.width;\n          this.canvas.height = this.stageConfig.height;\n      \n          this.createFloor = new Barrier(\n            -100,\n            this.stageConfig.height * 0.9,\n            this.stageConfig.width * 1.2,\n            50,\n            floor\n          );\n          this.createLeftWall = new Barrier(\n            -800,\n            0,\n            800,\n            this.stageConfig.height,\n            floor\n          );\n          this.createRightWall = new Barrier(\n            1000,\n            0,\n            800,\n            this.stageConfig.height,\n            floor\n          );\n          this.createPlatform = new Barrier(\n            this.stageConfig.width * 0.4,\n            this.stageConfig.height * 0.6,\n            200,\n            50,\n            platform2\n          );\n          this.createPlayer1 = new Player(30, 50, 100, 100, dog, dogReverse, \"right\");\n          this.createPlayer2 = new Player(855, 50, 100, 100, cat, catReverse, \"left\");\n          this.createSpecialP1 = new SpecialAttack(\n            2000,\n            2000,\n            100,\n            100,\n            bloodBoltR,\n            bloodBoltL\n          );\n          this.createSpecialP2 = new SpecialAttack(\n            2500,\n            2000,\n            100,\n            100,\n            bloodBoltR,\n            bloodBoltL\n          );\n          this.createBloodP1 = new SpecialEffects(\n            this.createPlayer1,\n            100,\n            100,\n            blood,\n            3,\n            2\n          );\n          this.createBloodP2 = new SpecialEffects(\n            this.createPlayer2,\n            100,\n            100,\n            blood,\n            3,\n            2\n          );\n          this.createShieldP1 = new SpecialEffects(\n            this.createPlayer1,\n            250,\n            350,\n            shield,\n            17,\n            1\n          );\n          this.createShieldP2 = new SpecialEffects(\n            this.createPlayer2,\n            250,\n            350,\n            shield,\n            17,\n            1\n          );\n          this.createAttackP1 = new SpecialEffects(\n            this.createPlayer1,\n            50,\n            50,\n            attack,\n            2,\n            1\n          );\n          this.createAttackP2 = new SpecialEffects(\n            this.createPlayer2,\n            50,\n            50,\n            attack,\n            2,\n            1\n          );\n          this.createTree = new Beautify(-2, 255, 200, 200, tree);\n          this.createTree2 = new Beautify(800, 255, 200, 200, tree);\n          this.createBox = new Beautify(400, 250, 50, 50, box);\n          this.createBirds = new Beautify(900, 55, 100, 100, birds);\n          this.createShrooms = new Beautify(400, 410, 50, 50, shrooms);\n          this.createFlowers = new Beautify(920, 405, 50, 50, flowers);\n          this.createFlowers2 = new Beautify(200, 405, 50, 50, flowers);\n          this.createAttackDropP1 = new Beautify(\n            this.createAttackP1.x,\n            this.createAttackP1.y,\n            100,\n            100,\n            attackDrop\n          );\n          this.createAttackDropP2 = new Beautify(\n            this.createAttackP2.x,\n            this.createAttackP2.y,\n            100,\n            100,\n            attackDrop\n          );\n        }\n        animate() {\n            //Update canvas\n            this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height);\n            //Beautify stuffff\n            this.createTree.update(this.ctx);\n            this.createTree2.update(this.ctx);\n            this.createBox.update(this.ctx);\n            this.createBirds.update(this.ctx);\n            this.createShrooms.update(this.ctx);\n            this.createFlowers.update(this.ctx);\n            this.createFlowers2.update(this.ctx);\n            //End stuffff\n            this.createFloor.update(this.ctx);\n            this.createLeftWall.update(this.ctx);\n            this.createRightWall.update(this.ctx);\n            this.createPlatform.update(this.ctx);\n            this.createPlayer1.update(this.ctx);\n            this.createPlayer2.update(this.ctx);\n            this.createSpecialP1.update(this.ctx);\n            this.createSpecialP2.update(this.ctx);\n            this.createBloodP1.update(this.ctx);\n            this.createBloodP2.update(this.ctx);\n            this.createShieldP1.update(this.ctx);\n            this.createShieldP2.update(this.ctx);\n            this.createAttackP1.update(this.ctx);\n            this.createAttackP2.update(this.ctx);\n            this.createAttackDropP1.update(this.ctx);\n            this.createAttackDropP2.update(this.ctx);\n          }\n        }\n\n       \n        \n        function colCheck(shapeA, shapeB) {\n            // get the vectors to check against\n            var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n              vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n              // add the half widths and half heights of the objects\n              hWidths = shapeA.w / 2 + shapeB.w / 2,\n              hHeights = shapeA.h / 2 + shapeB.h / 2,\n              colDir = null;\n          \n            // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n            if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n              // figures out on which side we are colliding (top, bottom, left, or right)\n              var oX = hWidths - Math.abs(vX),\n                oY = hHeights - Math.abs(vY);\n              if (shapeB == attackP1 || shapeB == attackP2) {\n                colDir = \"a\";\n              } else {\n                if (oX >= oY) {\n                  if (vY > 0) {\n                    colDir = \"t\";\n                    shapeA.y += oY;\n                  } else {\n                    colDir = \"b\";\n                    shapeA.y -= oY;\n                  }\n                } else {\n                  if (vX > 0) {\n                    colDir = \"l\";\n                    shapeA.x += oX;\n                  } else {\n                    colDir = \"r\";\n                    shapeA.x -= oX;\n                  }\n                }\n              }\n              return colDir;\n            }\n          }\n          let timeToDissapear = 100;\n          let timeToDissapear1 = 100;\n          let interval = null;\n          let frame = 0;\n          let playerDied = 0;\n          \n          /////////////////////////////////////\n          //////////// Play Game //////////////\n          /////////////////////////////////////\n          function playGame() {\n          \n            /////////\n          /////Fix On load issues for player 1 \n          \n            shieldP1.sh = shieldP1.img.height/shieldP1.numberTall\n            bloodP1.sh=bloodP1.img.height/bloodP1.numberTall\n            bloodP1.sw=bloodP1.img.width/bloodP1.numberWide\n            shieldP1.sw = shieldP1.img.width/shieldP1.numberWide\n            /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n                  then execute move functions in class--- */\n            if (playerDied == 1) {\n            //   setTimeout(killSound.play(), 1000);\n            //   gameOverSound.play();\n              playerDied++;\n            }\n            if (keys[74] && player2.special >= 100) {\n              //special attack\n            //   bloodBlastSound.play();\n              specialP1.reset(player1);\n              player2.special = 0;\n            }\n            if (keys[76] && player2.special > 25) {\n              //attack\n            //   attackSound.play();\n              player2.special -= 25;\n              if (player1.direction == \"right\") {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x + player1.w * 0.8;\n              } else {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x - player1.w * 0.4;\n              }\n              timeToDissapear1 = 100;\n              attackDropP1.reset(player1);\n            } else {\n              timeToDissapear1 -= 4;\n              if (timeToDissapear1 == 0) {\n                attackDropP1.y = -1000;\n                timeToDissapear1 = 100;\n              }\n              attackP1.y = -1000;\n            }\n            if (keys[37]) {\n              leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x - 30 > 0) {\n                player1.moveLeft();\n              }\n            }\n            if (keys[39]) {\n              rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x < 1365) {\n                player1.moveRight();\n              }\n            }\n            if (keys[38]) {\n              upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.y - player1.h > 0) {\n                if (!player1.jumping && player1.grounded) {\n                  player1.grounded = false;\n                  player1.jump();\n                }\n              }\n            }\n            if (keys[40] && player2.special > 10) {\n              downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              shieldP1.x = player1.x;\n              shieldP1.y = player1.y;\n              player1.drawBlockP1();\n              player1.blocking = true;\n              player2.special -= 2;\n            } else {\n              shieldP1.y = -1000;\n              player1.blocking = false;\n            }\n          \n            //PLAYER2\n            if (keys[50] && player1.special >= 100) {\n            //   bloodyBlastSound.play();\n              specialP2.reset(player2);\n              player1.special = 0;\n              console.log(\"i pressed it!\");\n            }\n            if (keys[51] && player1.special > 25) {\n            //   attackSound.play();\n              player1.special -= 25;\n              //attack\n              if (player2.direction == \"right\") {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x + player2.w * 0.8;\n              } else {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x - player2.w * 0.4;\n              }\n              timeToDissapear = 100;\n              attackDropP2.reset(player2);\n            } else {\n              timeToDissapear -= 4;\n              if (timeToDissapear == 0) {\n                attackDropP2.y = -1000;\n                timeToDissapear = 100;\n              }\n              attackP2.y = -1000;\n            }\n          \n            player1.velY += gravity;\n            player1.velX *= friction;\n            player1.grounded = false;\n          \n            if (keys[65]) {\n              aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveLeft();\n            }\n            if (keys[68]) {\n              ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveRight();\n            }\n            if (keys[87]) {\n              wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (!player2.jumping && player2.grounded) {\n                player2.grounded = false;\n                player2.jump();\n              }\n            }\n            if (keys[83] && player1.special > 10) {\n              sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.drawBlockP2();\n              player2.blocking = true;\n              player1.special -= 2;\n            } else {\n              shieldP2.y = -1000;\n              player2.blocking = false;\n            }\n            if (keys[77]) {\n            //   if (backgroundMusic.muted == false) backgroundMusic.muted = true;\n            //   else {\n            //     backgroundMusic.muted = false;\n            //   }\n            }\n          \n            player2.velY += gravity;\n            player2.velX *= friction;\n            player2.grounded = false;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player1, gameObjects[i]);\n              if (i < 4) {\n                if (dir === \"l\" || dir === \"r\") {\n                  player1.velX = 0;\n                  player1.jumping = false;\n                } else if (dir === \"b\") {\n                  player1.grounded = true;\n                  player1.jumping = false;\n                } else if (dir === \"t\") {\n                  player1.velY *= -1;\n                }\n              } else if (i == 5) {\n                if (dir != null) {\n                  player1.receiveDamageP1(3);\n                  specialP2.y = -500;\n                }\n              } else if (i == 7) {\n                if (dir != null) {\n                  player1.receiveDamageP1(1);\n                }\n              }\n            }\n          \n            if (player1.grounded) {\n              player1.velY = 0;\n              player1.idle();\n            }\n          \n            player1.x += player1.velX;\n            player1.y += player1.velY;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player2, gameObjects[i]);\n              if (i < 4) {\n                if (dir === \"l\" || dir === \"r\") {\n                  player2.velX = 0;\n                  player2.jumping = false;\n                } else if (dir === \"b\") {\n                  player2.grounded = true;\n                  player2.jumping = false;\n                } else if (dir === \"t\") {\n                  player2.velY *= -1;\n                }\n              } else if (i == 4) {\n                if (dir != null) {\n                  player2.receiveDamageP2(3);\n                  specialP1.y = -500;\n                }\n              } else if (i == 6) {\n                if (dir != null) {\n                  player2.receiveDamageP2(1);\n                }\n              }\n            }\n          \n            if (player2.grounded) {\n              player2.velY = 0;\n              player2.idle();\n            }\n          \n            player2.x += player2.velX;\n            player2.y += player2.velY;\n          \n            if (player1.health <= 0) {\n              player1.dead();\n            }\n            if (player2.health <= 0) {\n              player2.dead();\n            }\n            if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n              player1.run();\n            }\n            if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n              player2.run();\n            }\n            // if (player1.grounded == false) {\n            //   player1.fall()\n            // }\n            // if (player2.grounded == false) {\n            //   player2.fall()\n            // }\n          \n            // player1.x\n            // player2.x\n          \n            frame++;\n            // gameOver();\n            interval = requestAnimationFrame(playGame);\n            canvasDisplay.animate();\n          }\n          \n          /////////////////////////////////////\n          /// Key selectors for css anims /////\n          /////////////////////////////////////\n          let leftkey = document.querySelector(\"#leftkey\");\n          let rightkey = document.querySelector(\"#rightkey\");\n          let upkey = document.querySelector(\"#upkey\");\n          let downkey = document.querySelector(\"#downkey\");\n          let aakey = document.querySelector(\"#aakey\");\n          let ddkey = document.querySelector(\"#ddkey\");\n          let wwkey = document.querySelector(\"#wwkey\");\n          let sskey = document.querySelector(\"#sskey\");\n          \n          /////////////////////////////////////\n          /////// Key listeners  //////////////\n          /////////////////////////////////////\n          window.onkeydown = function (e) {\n            keys[e.keyCode] = true;\n          };\n          window.onkeyup = function (e) {\n            keys[e.keyCode] = false;\n            document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n          };\n          \n         \n          \n\n    return (\n        <div>\n            <canvas ref={canvasRef} onLoad={loaded}></canvas>\n        </div>\n    );\n}\n\nexport default GameWindow;"]},"metadata":{},"sourceType":"module"}