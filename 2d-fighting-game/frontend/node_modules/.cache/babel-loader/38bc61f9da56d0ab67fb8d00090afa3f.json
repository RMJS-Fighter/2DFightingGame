{"ast":null,"code":"var _jsxFileName = \"/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\nlet floorImg = new Image();\nfloorImg.src = floor;\nlet platform2Img = new Image();\nplatform2Img.src = platform2;\nlet dogImg = new Image();\ndogImg.src = dog;\nlet dogReverseImg = new Image();\ndogReverseImg.src = dogReverse;\nlet catImg = new Image();\ncatImg.src = cat;\nlet catReverseImg = new Image();\ncatReverseImg.src = catReverse;\nlet bloodBoltRImg = new Image();\nbloodBoltRImg.src = bloodBoltR;\nlet bloodBoltLImg = new Image();\nbloodBoltLImg.src = bloodBoltL;\nlet bloodImg = new Image();\nbloodImg.src = blood;\nlet shieldImg = new Image();\nshieldImg.src = shield;\nlet attackImg = new Image();\nattackImg.src = attack;\nlet treeImg = new Image();\ntreeImg.src = tree;\nlet boxImg = new Image();\nboxImg.src = box;\nlet birdsImg = new Image();\nbirdsImg.src = birds;\nlet shroomsImg = new Image();\nshroomsImg.src = shrooms;\nlet flowersImg = new Image();\nflowersImg.src = flowers;\nlet attackDropImg = new Image();\nattackDropImg.src = attackDrop;\n\nfunction GameWindow(props) {\n  _s();\n\n  const canvasRef = useRef();\n\n  const gameStart = () => {\n    class SpecialEffects {\n      constructor(player, w, h, img, numberWide, numberTall) {\n        this.x = player.x;\n        this.y = -1000;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n        this.sx = 0;\n        this.sy = 0; //   const reSize = () => {\n        //     this.sw = img.width / numberWide;\n        //     this.sh = img.height / numberTall;\n        //   };\n\n        this.sw = img.width / numberWide;\n        this.sh = img.height / numberTall;\n        this.numberWide = numberWide;\n        this.numberTall = numberTall; //   reSize();\n        //   img.onload = reSize;\n      }\n\n      draw(ctx) {\n        //animate blood\n        if (this.img === bloodImg) {\n          if (frame % 8 === 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw * 2 && this.sy === 0) {\n            this.sx = 0;\n            this.sy = this.sh;\n          } else if (this.sx > this.sw * 2 && this.sy === this.sh) {\n            this.y = -1000;\n          }\n        } else if (this.img === shieldImg) {\n          if (frame % 4 === 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw * 6) {\n            this.sx = this.sw * 4;\n          }\n        } else if (this.img = attackImg) {\n          if (frame % 4 === 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw) {\n            this.sx = 0;\n          }\n        } //actually drawing\n\n\n        ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n    }\n\n    class Player {\n      constructor(x, y, w, h, img, rImg, direction) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.velX = 0;\n        this.velY = 0;\n        this.speed = 5;\n        this.jumping = false;\n        this.grounded = false;\n        this.img = img;\n        this.rImg = rImg;\n        this.sx = 0; //frame of animation\n        //   const reSize = () => {\n\n        this.sy = img.height / 5; //animation type\n\n        this.sw = img.width / 10;\n        this.sh = img.height / 5; //   };\n        //   reSize();\n        //   img.onload = reSize;\n\n        this.numberTall = 5;\n        this.numberWide = 10;\n        this.health = 100;\n        this.special = 0;\n        this.keepLooping = true;\n        this.direction = direction;\n        this.blocking = false;\n      }\n\n      draw(ctx) {\n        //dead\n        if (frame % 3 === 0 && this.special < 100) {\n          this.special = this.special + 2; // if (this.img === cat) {\n          //   document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n          // } else {\n          //   document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n          // }\n        }\n\n        if (this.sy === 0 && frame % 20 === 0) {\n          this.sx += this.sw;\n        } // Idle-foolishness\n        // if (this.sy === this.sh*3 && frame % 10 === 0){\n        //   this.sx += this.sw\n        // }\n\n\n        if (this.sy === this.sh * 4 && frame % 5 === 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx >= (this.numberWide - 1) * this.sw) {\n          if (this.keepLooping) {\n            this.sx = 0;\n          } else {\n            this.sx = (this.numberWide - 1) * this.sw;\n          }\n        }\n\n        if (this.direction === \"left\") {\n          ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        } else {\n          ctx.drawImage(this.rImg, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        }\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n        this.lowHealth();\n      }\n\n      jump() {\n        this.velY = -this.speed * 2;\n        this.y = this.y + this.velY;\n        this.fall();\n      }\n\n      dead() {\n        this.numberWide = 10; //how many dead frames you have\n\n        this.sy = 0;\n        this.keepLooping = false;\n      }\n\n      fall() {\n        this.numberWide = 8;\n        this.sy = this.sh;\n      }\n\n      hurt() {\n        this.numberWide = 10;\n        this.sy = this.sh * 2;\n      }\n\n      idle() {\n        this.numberWide = 10;\n        this.sy = this.sh * 3;\n      }\n\n      run() {\n        this.numberWide = 8;\n        this.sy = this.sh * 4;\n      }\n\n      moveRight() {\n        if (this.velX < 0) {\n          this.velX = 0;\n        }\n\n        if (this.velX < this.speed) {\n          this.velX = this.velX + 4;\n        }\n\n        this.x += this.velX;\n        this.direction = \"right\";\n      }\n\n      moveLeft() {\n        if (this.velX > 0) {\n          this.velX = 0;\n        }\n\n        if (this.velX > -this.speed) {\n          this.velX = this.velX - 4;\n        }\n\n        this.x += this.velX;\n        this.direction = \"left\";\n      }\n\n      receiveDamageP1(multiplier) {\n        if (this.blocking === false) {\n          this.health -= 10 * multiplier; // hit1Sound.play();\n\n          if (player2.direction === \"right\") {\n            this.y -= this.h * 1;\n            this.x += this.w;\n          } else {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          }\n        } else {\n          this.health -= 2 * multiplier; // hit2Sound.play();\n        }\n\n        bloodP1.sx = 0;\n        bloodP1.sy = 0;\n        bloodP1.y = this.y;\n        bloodP1.x = this.x; //   if (this.health < 50) {\n        //     document.querySelector(\n        //       \"#hp-1\"\n        //     ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        //     document.querySelector(\".player1\").style.cssText =\n        //       \"animation: healthGlow 2s infinite;\";\n        //   }\n        //   document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n      }\n\n      receiveDamageP2(multiplier) {\n        if (this.blocking === false) {\n          this.health -= 10 * multiplier; // hit3Sound.play();\n\n          if (player1.direction === \"right\") {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          } else {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          }\n        } else {\n          // hit4Sound.play();\n          this.health -= 2 * multiplier;\n        }\n\n        bloodP2.sx = 0;\n        bloodP2.sy = 0;\n        bloodP2.y = this.y;\n        bloodP2.x = this.x; //   if (this.health < 50) {\n        //     document.querySelector(\n        //       \"#hp-2\"\n        //     ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        //     document.querySelector(\".player2\").style.cssText =\n        //       \"animation: healthGlow 2s infinite;\";\n        //   }\n        //   document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n      }\n\n      drawBlockP1() {\n        shieldP1.sx = shieldP1.sw * 4;\n        shieldP1.sy = 0;\n        shieldP1.y = this.y - this.h * 1.5;\n        shieldP1.x = this.x - this.w * 1.2;\n        this.blocking = true;\n      }\n\n      drawBlockP2() {\n        shieldP2.sx = shieldP2.sw * 4;\n        shieldP2.sy = 0;\n        shieldP2.y = this.y - this.h * 1.5;\n        shieldP2.x = this.x - this.w * 1.05;\n        this.blocking = true;\n      }\n\n      lowHealth() {\n        if (this.health <= 40) {\n          let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n          lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n        }\n      }\n\n    }\n\n    class SpecialAttack {\n      constructor(x, y, w, h, img, img2) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n        this.img2 = img2;\n        this.sx = 0;\n        this.sy = 0; //   const reSize = () => {\n\n        this.sw = 786 / 5;\n        this.sh = 151; //   };\n        //   reSize();\n        //   img.onload = reSize;\n        //   img2.onload= reSize;\n\n        this.direction = null;\n      }\n\n      update(ctx) {\n        this.drawAttack(ctx);\n      }\n\n      drawAttack(ctx) {\n        if (frame % 5 === 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx > this.sw * 4) {\n          this.sx = 0;\n        }\n\n        if (this.direction === \"right\") {\n          this.x += 8;\n        } else {\n          this.x -= 8;\n        }\n\n        if (this.direction === \"right\") {\n          ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        } else {\n          ctx.drawImage(this.img2, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        }\n      }\n\n      reset(player) {\n        this.direction = player.direction;\n\n        if (this.direction === \"right\") {\n          this.x = player.x + player.w;\n        } else {\n          this.x = player.x - player.w;\n        }\n\n        this.y = player.y;\n      }\n\n    }\n\n    class Beautify {\n      constructor(x, y, w, h, img) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n      }\n\n      draw(ctx) {\n        console.log(ctx);\n        ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n      reset(player) {\n        this.direction = player.direction;\n\n        if (this.direction === \"right\") {\n          this.x = player.x + player.w * 0.5;\n        } else {\n          this.x = player.x - player.w * 0.5;\n        }\n\n        this.y = player.y;\n      }\n\n    }\n\n    class Barrier {\n      constructor(x, y, w, h, img) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n      }\n\n      draw(ctx) {\n        ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n    }\n\n    class CanvasDisplay {\n      constructor() {\n        this.canvas = canvasRef.current;\n        this.ctx = canvasRef.current.getContext(\"2d\");\n        this.stageConfig = {\n          width: 1000,\n          height: 500\n        }; //create game objects to manipulate\n\n        this.canvas.width = this.stageConfig.width;\n        this.canvas.height = this.stageConfig.height;\n        this.createFloor = new Barrier(-100, this.stageConfig.height * 0.9, this.stageConfig.width * 1.2, 50, floorImg);\n        this.createLeftWall = new Barrier(-800, 0, 800, this.stageConfig.height, floorImg);\n        this.createRightWall = new Barrier(1000, 0, 800, this.stageConfig.height, floorImg);\n        this.createPlatform = new Barrier(this.stageConfig.width * 0.4, this.stageConfig.height * 0.6, 200, 50, platform2Img);\n        this.createPlayer1 = new Player(30, 50, 100, 100, dogImg, dogReverseImg, \"right\");\n        this.createPlayer2 = new Player(855, 50, 100, 100, catImg, catReverseImg, \"left\");\n        this.createSpecialP1 = new SpecialAttack(2000, 2000, 100, 100, bloodBoltRImg, bloodBoltLImg);\n        this.createSpecialP2 = new SpecialAttack(2500, 2000, 100, 100, bloodBoltRImg, bloodBoltLImg);\n        this.createBloodP1 = new SpecialEffects(this.createPlayer1, 100, 100, bloodImg, 3, 2);\n        this.createBloodP2 = new SpecialEffects(this.createPlayer2, 100, 100, bloodImg, 3, 2);\n        this.createShieldP1 = new SpecialEffects(this.createPlayer1, 250, 350, shieldImg, 17, 1);\n        this.createShieldP2 = new SpecialEffects(this.createPlayer2, 250, 350, shieldImg, 17, 1);\n        this.createAttackP1 = new SpecialEffects(this.createPlayer1, 50, 50, attackImg, 2, 1);\n        this.createAttackP2 = new SpecialEffects(this.createPlayer2, 50, 50, attackImg, 2, 1);\n        this.createTree = new Beautify(-2, 255, 200, 200, treeImg);\n        this.createTree2 = new Beautify(800, 255, 200, 200, treeImg);\n        this.createBox = new Beautify(400, 250, 50, 50, boxImg);\n        this.createBirds = new Beautify(900, 55, 100, 100, birdsImg);\n        this.createShrooms = new Beautify(400, 410, 50, 50, shroomsImg);\n        this.createFlowers = new Beautify(920, 405, 50, 50, flowersImg);\n        this.createFlowers2 = new Beautify(200, 405, 50, 50, flowersImg);\n        this.createAttackDropP1 = new Beautify(this.createAttackP1.x, this.createAttackP1.y, 100, 100, attackDropImg);\n        this.createAttackDropP2 = new Beautify(this.createAttackP2.x, this.createAttackP2.y, 100, 100, attackDropImg);\n      }\n\n      animate() {\n        //Update canvas\n        this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height); //Beautify stuffff\n\n        this.createTree.update(this.ctx);\n        this.createTree2.update(this.ctx);\n        this.createBox.update(this.ctx);\n        this.createBirds.update(this.ctx);\n        this.createShrooms.update(this.ctx);\n        this.createFlowers.update(this.ctx);\n        this.createFlowers2.update(this.ctx); //End stuffff\n\n        this.createFloor.update(this.ctx);\n        this.createLeftWall.update(this.ctx);\n        this.createRightWall.update(this.ctx);\n        this.createPlatform.update(this.ctx);\n        this.createPlayer1.update(this.ctx);\n        this.createPlayer2.update(this.ctx);\n        this.createSpecialP1.update(this.ctx);\n        this.createSpecialP2.update(this.ctx);\n        this.createBloodP1.update(this.ctx);\n        this.createBloodP2.update(this.ctx);\n        this.createShieldP1.update(this.ctx);\n        this.createShieldP2.update(this.ctx);\n        this.createAttackP1.update(this.ctx);\n        this.createAttackP2.update(this.ctx);\n        this.createAttackDropP1.update(this.ctx);\n        this.createAttackDropP2.update(this.ctx);\n      }\n\n    }\n\n    let canvasDisplay = new CanvasDisplay();\n    let ctx = canvasDisplay.ctx;\n    let player1 = canvasDisplay.createPlayer1;\n    let player2 = canvasDisplay.createPlayer2;\n    let specialP1 = canvasDisplay.createSpecialP1;\n    let specialP2 = canvasDisplay.createSpecialP2;\n    let bloodP1 = canvasDisplay.createBloodP1;\n    let bloodP2 = canvasDisplay.createBloodP2;\n    let shieldP1 = canvasDisplay.createShieldP1;\n    let shieldP2 = canvasDisplay.createShieldP2;\n    let attackP1 = canvasDisplay.createAttackP1;\n    let attackP2 = canvasDisplay.createAttackP2;\n    let attackDropP1 = canvasDisplay.createAttackDropP1;\n    let attackDropP2 = canvasDisplay.createAttackDropP2;\n    let platform = canvasDisplay.createPlatform;\n    let stage = canvasDisplay.createFloor;\n    let leftWall = canvasDisplay.createLeftWall;\n    let rightWall = canvasDisplay.createRightWall;\n    let gameObjects = [canvasDisplay.createPlatform, canvasDisplay.createFloor, canvasDisplay.createLeftWall, canvasDisplay.createRightWall, canvasDisplay.createSpecialP1, canvasDisplay.createSpecialP2, canvasDisplay.createAttackP1, canvasDisplay.createAttackP2];\n\n    function colCheck(shapeA, shapeB) {\n      // get the vectors to check against\n      var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n          vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n          // add the half widths and half heights of the objects\n      hWidths = shapeA.w / 2 + shapeB.w / 2,\n          hHeights = shapeA.h / 2 + shapeB.h / 2,\n          colDir = null; // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n\n      if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n        // figures out on which side we are colliding (top, bottom, left, or right)\n        var oX = hWidths - Math.abs(vX),\n            oY = hHeights - Math.abs(vY);\n\n        if (shapeB === attackP1 || shapeB === attackP2) {\n          colDir = \"a\";\n        } else {\n          if (oX >= oY) {\n            if (vY > 0) {\n              colDir = \"t\";\n              shapeA.y += oY;\n            } else {\n              colDir = \"b\";\n              shapeA.y -= oY;\n            }\n          } else {\n            if (vX > 0) {\n              colDir = \"l\";\n              shapeA.x += oX;\n            } else {\n              colDir = \"r\";\n              shapeA.x -= oX;\n            }\n          }\n        }\n\n        return colDir;\n      }\n    }\n\n    let timeToDissapear = 100;\n    let timeToDissapear1 = 100;\n    let interval = null;\n    let frame = 0;\n    let playerDied = 0; /////////////////////////////////////\n    //////////// Play Game //////////////\n    /////////////////////////////////////\n\n    function playGame() {\n      /////////\n      /////Fix On load issues for player 1 \n      shieldP1.sh = shieldP1.img.height / shieldP1.numberTall;\n      bloodP1.sh = bloodP1.img.height / bloodP1.numberTall;\n      bloodP1.sw = bloodP1.img.width / bloodP1.numberWide;\n      shieldP1.sw = shieldP1.img.width / shieldP1.numberWide;\n      /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n            then execute move functions in class--- */\n\n      if (playerDied === 1) {\n        //   setTimeout(killSound.play(), 1000);\n        //   gameOverSound.play();\n        playerDied++;\n      }\n\n      if (keys[74] && player2.special >= 100) {\n        //special attack\n        //   bloodBlastSound.play();\n        specialP1.reset(player1);\n        player2.special = 0;\n      }\n\n      if (keys[76] && player2.special > 25) {\n        //attack\n        //   attackSound.play();\n        player2.special -= 25;\n\n        if (player1.direction === \"right\") {\n          attackP1.y = player1.y + player1.h / 4;\n          attackP1.x = player1.x + player1.w * 0.8;\n        } else {\n          attackP1.y = player1.y + player1.h / 4;\n          attackP1.x = player1.x - player1.w * 0.4;\n        }\n\n        timeToDissapear1 = 100;\n        attackDropP1.reset(player1);\n      } else {\n        timeToDissapear1 -= 4;\n\n        if (timeToDissapear1 === 0) {\n          attackDropP1.y = -1000;\n          timeToDissapear1 = 100;\n        }\n\n        attackP1.y = -1000;\n      }\n\n      if (keys[37]) {\n        leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.x - 30 > 0) {\n          player1.moveLeft();\n        }\n      }\n\n      if (keys[39]) {\n        rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.x < 1365) {\n          player1.moveRight();\n        }\n      }\n\n      if (keys[38]) {\n        upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.y - player1.h > 0) {\n          if (!player1.jumping && player1.grounded) {\n            player1.grounded = false;\n            player1.jump();\n          }\n        }\n      }\n\n      if (keys[40] && player2.special > 10) {\n        downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        shieldP1.x = player1.x;\n        shieldP1.y = player1.y;\n        player1.drawBlockP1();\n        player1.blocking = true;\n        player2.special -= 2;\n      } else {\n        shieldP1.y = -1000;\n        player1.blocking = false;\n      } //PLAYER2\n\n\n      if (keys[50] && player1.special >= 100) {\n        //   bloodyBlastSound.play();\n        specialP2.reset(player2);\n        player1.special = 0;\n        console.log(\"i pressed it!\");\n      }\n\n      if (keys[51] && player1.special > 25) {\n        //   attackSound.play();\n        player1.special -= 25; //attack\n\n        if (player2.direction === \"right\") {\n          attackP2.y = player2.y + player2.h / 4;\n          attackP2.x = player2.x + player2.w * 0.8;\n        } else {\n          attackP2.y = player2.y + player2.h / 4;\n          attackP2.x = player2.x - player2.w * 0.4;\n        }\n\n        timeToDissapear = 100;\n        attackDropP2.reset(player2);\n      } else {\n        timeToDissapear -= 4;\n\n        if (timeToDissapear === 0) {\n          attackDropP2.y = -1000;\n          timeToDissapear = 100;\n        }\n\n        attackP2.y = -1000;\n      }\n\n      player1.velY += gravity;\n      player1.velX *= friction;\n      player1.grounded = false;\n\n      if (keys[65]) {\n        aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.moveLeft();\n      }\n\n      if (keys[68]) {\n        ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.moveRight();\n      }\n\n      if (keys[87]) {\n        wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (!player2.jumping && player2.grounded) {\n          player2.grounded = false;\n          player2.jump();\n        }\n      }\n\n      if (keys[83] && player1.special > 10) {\n        sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.drawBlockP2();\n        player2.blocking = true;\n        player1.special -= 2;\n      } else {\n        shieldP2.y = -1000;\n        player2.blocking = false;\n      }\n\n      if (keys[77]) {//   if (backgroundMusic.muted === false) backgroundMusic.muted = true;\n        //   else {\n        //     backgroundMusic.muted = false;\n        //   }\n      }\n\n      player2.velY += gravity;\n      player2.velX *= friction;\n      player2.grounded = false;\n\n      for (var i = 0; i < gameObjects.length; i++) {\n        var dir = colCheck(player1, gameObjects[i]);\n\n        if (i < 4) {\n          if (dir == \"l\" || dir === \"r\") {\n            player1.velX = 0;\n            player1.jumping = false;\n          } else if (dir === \"b\") {\n            player1.grounded = true;\n            player1.jumping = false;\n          } else if (dir === \"t\") {\n            player1.velY *= -1;\n          }\n        } else if (i === 5) {\n          if (dir != null) {\n            player1.receiveDamageP1(3);\n            specialP2.y = -500;\n          }\n        } else if (i === 7) {\n          if (dir != null) {\n            player1.receiveDamageP1(1);\n          }\n        }\n      }\n\n      if (player1.grounded) {\n        player1.velY = 0;\n        player1.idle();\n      }\n\n      player1.x += player1.velX;\n      player1.y += player1.velY;\n\n      for (var i = 0; i < gameObjects.length; i++) {\n        var dir = colCheck(player2, gameObjects[i]);\n\n        if (i < 4) {\n          if (dir === \"l\" || dir === \"r\") {\n            player2.velX = 0;\n            player2.jumping = false;\n          } else if (dir === \"b\") {\n            player2.grounded = true;\n            player2.jumping = false;\n          } else if (dir === \"t\") {\n            player2.velY *= -1;\n          }\n        } else if (i === 4) {\n          if (dir != null) {\n            player2.receiveDamageP2(3);\n            specialP1.y = -500;\n          }\n        } else if (i === 6) {\n          if (dir != null) {\n            player2.receiveDamageP2(1);\n          }\n        }\n      }\n\n      if (player2.grounded) {\n        player2.velY = 0;\n        player2.idle();\n      }\n\n      player2.x += player2.velX;\n      player2.y += player2.velY;\n\n      if (player1.health <= 0) {\n        player1.dead();\n      }\n\n      if (player2.health <= 0) {\n        player2.dead();\n      }\n\n      if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n        player1.run();\n      }\n\n      if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n        player2.run();\n      } // if (player1.grounded === false) {\n      //   player1.fall()\n      // }\n      // if (player2.grounded === false) {\n      //   player2.fall()\n      // }\n      // player1.x\n      // player2.x\n\n\n      frame++; // gameOver();\n\n      interval = requestAnimationFrame(playGame);\n      canvasDisplay.animate();\n    } /////////////////////////////////////\n    /// Key selectors for css anims /////\n    /////////////////////////////////////\n\n\n    let leftkey = document.querySelector(\"#leftkey\");\n    let rightkey = document.querySelector(\"#rightkey\");\n    let upkey = document.querySelector(\"#upkey\");\n    let downkey = document.querySelector(\"#downkey\");\n    let aakey = document.querySelector(\"#aakey\");\n    let ddkey = document.querySelector(\"#ddkey\");\n    let wwkey = document.querySelector(\"#wwkey\");\n    let sskey = document.querySelector(\"#sskey\"); /////////////////////////////////////\n    /////// Key listeners  //////////////\n    /////////////////////////////////////\n\n    window.onkeydown = function (e) {\n      keys[e.keyCode] = true;\n    };\n\n    window.onkeyup = function (e) {\n      keys[e.keyCode] = false; // document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n      // document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n    };\n\n    playGame();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 990,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameStart,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 991,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 989,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameWindow, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = GameWindow;\nexport default GameWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWindow\");","map":{"version":3,"sources":["/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js"],"names":["React","useRef","useEffect","useState","floor","platform2","dog","dogReverse","cat","catReverse","bloodBoltR","bloodBoltL","blood","shield","attack","tree","box","birds","shrooms","flowers","attackDrop","friction","gravity","keys","floorImg","Image","src","platform2Img","dogImg","dogReverseImg","catImg","catReverseImg","bloodBoltRImg","bloodBoltLImg","bloodImg","shieldImg","attackImg","treeImg","boxImg","birdsImg","shroomsImg","flowersImg","attackDropImg","GameWindow","props","canvasRef","gameStart","SpecialEffects","constructor","player","w","h","img","numberWide","numberTall","x","y","sx","sy","sw","width","sh","height","draw","ctx","frame","drawImage","update","Player","rImg","direction","velX","velY","speed","jumping","grounded","health","special","keepLooping","blocking","lowHealth","jump","fall","dead","hurt","idle","run","moveRight","moveLeft","receiveDamageP1","multiplier","player2","bloodP1","receiveDamageP2","player1","bloodP2","drawBlockP1","shieldP1","drawBlockP2","shieldP2","lowHealthDarkBg","document","querySelector","style","animation","SpecialAttack","img2","drawAttack","reset","Beautify","console","log","Barrier","CanvasDisplay","canvas","current","getContext","stageConfig","createFloor","createLeftWall","createRightWall","createPlatform","createPlayer1","createPlayer2","createSpecialP1","createSpecialP2","createBloodP1","createBloodP2","createShieldP1","createShieldP2","createAttackP1","createAttackP2","createTree","createTree2","createBox","createBirds","createShrooms","createFlowers","createFlowers2","createAttackDropP1","createAttackDropP2","animate","clearRect","canvasDisplay","specialP1","specialP2","attackP1","attackP2","attackDropP1","attackDropP2","platform","stage","leftWall","rightWall","gameObjects","colCheck","shapeA","shapeB","vX","vY","hWidths","hHeights","colDir","Math","abs","oX","oY","timeToDissapear","timeToDissapear1","interval","playerDied","playGame","leftkey","rightkey","upkey","downkey","aakey","ddkey","wwkey","sskey","i","length","dir","requestAnimationFrame","window","onkeydown","e","keyCode","onkeyup"],"mappings":"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","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\n\n\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\n\n\nlet floorImg = new Image();\nfloorImg.src = floor;\n\nlet platform2Img = new Image();\nplatform2Img.src = platform2;\n\nlet dogImg = new Image();\ndogImg.src = dog;\n\nlet dogReverseImg = new Image();\ndogReverseImg.src = dogReverse;\n\nlet catImg = new Image();\ncatImg.src = cat;\n\nlet catReverseImg = new Image();\ncatReverseImg.src = catReverse;\n\nlet bloodBoltRImg = new Image();\nbloodBoltRImg.src = bloodBoltR;\n\nlet bloodBoltLImg = new Image();\nbloodBoltLImg.src = bloodBoltL;\n\nlet bloodImg = new Image();\nbloodImg.src = blood;\n\nlet shieldImg = new Image();\nshieldImg.src = shield;\n\nlet attackImg = new Image();\nattackImg.src = attack;\n\nlet treeImg = new Image();\ntreeImg.src = tree;\n\nlet boxImg = new Image();\nboxImg.src = box;\n\nlet birdsImg = new Image();\nbirdsImg.src = birds;\n\nlet shroomsImg = new Image();\nshroomsImg.src = shrooms;\n\nlet flowersImg = new Image();\nflowersImg.src = flowers;\n\nlet attackDropImg = new Image();\nattackDropImg.src = attackDrop;\n\n\n\nfunction GameWindow(props) {\n    const canvasRef=useRef();\n\nconst gameStart=()=>{\n\n \n    class SpecialEffects {\n        constructor(player, w, h, img, numberWide, numberTall) {\n          this.x = player.x;\n          this.y = -1000;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.sx = 0;\n          this.sy = 0;\n        //   const reSize = () => {\n        //     this.sw = img.width / numberWide;\n        //     this.sh = img.height / numberTall;\n        //   };\n        this.sw = img.width / numberWide;\n            this.sh = img.height / numberTall;\n          this.numberWide = numberWide;\n          this.numberTall = numberTall;\n        //   reSize();\n        //   img.onload = reSize;\n        }\n      \n        draw(ctx) {\n          //animate blood\n          if (this.img === bloodImg) {\n            if (frame % 8 === 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 2 && this.sy === 0) {\n              this.sx = 0;\n              this.sy = this.sh;\n            } else if (this.sx > this.sw * 2 && this.sy === this.sh) {\n              this.y = -1000;\n            }\n          } else if (this.img === shieldImg) {\n            if (frame % 4 === 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 6) {\n              this.sx = this.sw * 4;\n            }\n          } else if ((this.img = attackImg)) {\n            if (frame % 4 === 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw) {\n              this.sx = 0;\n            }\n          }\n      \n          //actually drawing\n          ctx.drawImage(\n            this.img,\n            this.sx,\n            this.sy,\n            this.sw,\n            this.sh,\n            this.x,\n            this.y,\n            this.w,\n            this.h\n          );\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n      class Player {\n        constructor(x, y, w, h, img, rImg, direction) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.velX = 0;\n          this.velY = 0;\n          this.speed = 5;\n          this.jumping = false;\n          this.grounded = false;\n          this.img = img;\n          this.rImg = rImg;\n          this.sx = 0; //frame of animation\n        //   const reSize = () => {\n            this.sy = img.height / 5; //animation type\n            this.sw = img.width / 10;\n            this.sh = img.height / 5;\n        //   };\n        //   reSize();\n        //   img.onload = reSize;\n          this.numberTall = 5;\n          this.numberWide = 10;\n          this.health = 100;\n          this.special = 0;\n          this.keepLooping = true;\n          this.direction = direction;\n          this.blocking = false;\n        }\n      \n        draw(ctx) {\n          //dead\n          if (frame % 3 === 0 && this.special < 100) {\n            this.special = this.special + 2;\n            // if (this.img === cat) {\n            //   document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n            // } else {\n            //   document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n            // }\n          }\n      \n          if (this.sy === 0 && frame % 20 === 0) {\n            this.sx += this.sw;\n          }\n          // Idle-foolishness\n          // if (this.sy === this.sh*3 && frame % 10 === 0){\n          //   this.sx += this.sw\n          // }\n          if (this.sy === this.sh * 4 && frame % 5 === 0) {\n            this.sx += this.sw;\n          }\n      \n          if (this.sx >= (this.numberWide - 1) * this.sw) {\n            if (this.keepLooping) {\n              this.sx = 0;\n            } else {\n              this.sx = (this.numberWide - 1) * this.sw;\n            }\n          }\n          if (this.direction === \"left\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.rImg,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        update(ctx) {\n          this.draw(ctx);\n          this.lowHealth();\n        }\n        jump() {\n          this.velY = -this.speed * 2;\n          this.y = this.y + this.velY;\n          this.fall();\n        }\n        dead() {\n          this.numberWide = 10; //how many dead frames you have\n          this.sy = 0;\n          this.keepLooping = false;\n        }\n        fall() {\n          this.numberWide = 8;\n          this.sy = this.sh;\n        }\n        hurt() {\n          this.numberWide = 10;\n          this.sy = this.sh * 2;\n        }\n        idle() {\n          this.numberWide = 10;\n          this.sy = this.sh * 3;\n        }\n        run() {\n          this.numberWide = 8;\n          this.sy = this.sh * 4;\n        }\n        moveRight() {\n          if (this.velX < 0) {\n            this.velX = 0;\n          }\n          if (this.velX < this.speed) {\n            this.velX = this.velX + 4;\n          }\n          this.x += this.velX;\n          this.direction = \"right\";\n        }\n        moveLeft() {\n          if (this.velX > 0) {\n            this.velX = 0;\n          }\n          if (this.velX > -this.speed) {\n            this.velX = this.velX - 4;\n          }\n          this.x += this.velX;\n          this.direction = \"left\";\n        }\n        receiveDamageP1(multiplier) {\n          if (this.blocking === false) {\n            this.health -= 10 * multiplier;\n            // hit1Sound.play();\n            if (player2.direction === \"right\") {\n              this.y -= this.h * 1;\n              this.x += this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            this.health -= 2 * multiplier;\n            // hit2Sound.play();\n          }\n          bloodP1.sx = 0;\n          bloodP1.sy = 0;\n          bloodP1.y = this.y;\n          bloodP1.x = this.x;\n        //   if (this.health < 50) {\n        //     document.querySelector(\n        //       \"#hp-1\"\n        //     ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        //     document.querySelector(\".player1\").style.cssText =\n        //       \"animation: healthGlow 2s infinite;\";\n        //   }\n        //   document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n        }\n        receiveDamageP2(multiplier) {\n          if (this.blocking === false) {\n            this.health -= 10 * multiplier;\n            // hit3Sound.play();\n            if (player1.direction === \"right\") {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            // hit4Sound.play();\n            this.health -= 2 * multiplier;\n          }\n      \n          bloodP2.sx = 0;\n          bloodP2.sy = 0;\n          bloodP2.y = this.y;\n          bloodP2.x = this.x;\n        //   if (this.health < 50) {\n        //     document.querySelector(\n        //       \"#hp-2\"\n        //     ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n        //     document.querySelector(\".player2\").style.cssText =\n        //       \"animation: healthGlow 2s infinite;\";\n        //   }\n        //   document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n        }\n        drawBlockP1() {\n          shieldP1.sx = shieldP1.sw * 4;\n          shieldP1.sy = 0;\n          shieldP1.y = this.y - this.h * 1.5;\n          shieldP1.x = this.x - this.w * 1.2;\n          this.blocking = true;\n        }\n        drawBlockP2() {\n          shieldP2.sx = shieldP2.sw * 4;\n          shieldP2.sy = 0;\n          shieldP2.y = this.y - this.h * 1.5;\n          shieldP2.x = this.x - this.w * 1.05;\n          this.blocking = true;\n        }\n        lowHealth() {\n          if (this.health <= 40) {\n            let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n            lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n          }\n        }\n      }\n      \n      class SpecialAttack {\n        constructor(x, y, w, h, img, img2) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.img2 = img2;\n          this.sx = 0;\n          this.sy = 0;\n        //   const reSize = () => {\n            this.sw = 786 / 5;\n            this.sh = 151;\n        //   };\n        //   reSize();\n        //   img.onload = reSize;\n        //   img2.onload= reSize;\n          this.direction = null;\n        }\n        update(ctx) {\n          this.drawAttack(ctx);\n        }\n        drawAttack(ctx) {\n          if (frame % 5 === 0) {\n            this.sx += this.sw;\n          }\n          if (this.sx > this.sw * 4) {\n            this.sx = 0;\n          }\n          if (this.direction === \"right\") {\n            this.x += 8;\n          } else {\n            this.x -= 8;\n          }\n          if (this.direction === \"right\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.img2,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction === \"right\") {\n            this.x = player.x + player.w;\n          } else {\n            this.x = player.x - player.w;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Beautify {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n        draw(ctx) {\n            console.log(ctx);\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction === \"right\") {\n            this.x = player.x + player.w * 0.5;\n          } else {\n            this.x = player.x - player.w * 0.5;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Barrier {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n      \n        draw(ctx) {\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n\n    class CanvasDisplay {\n        constructor() {\n          this.canvas = canvasRef.current;\n          this.ctx = canvasRef.current.getContext(\"2d\");\n          this.stageConfig = {\n            width: 1000,\n            height: 500,\n          };\n      \n          //create game objects to manipulate\n          this.canvas.width = this.stageConfig.width;\n          this.canvas.height = this.stageConfig.height;\n      \n          this.createFloor = new Barrier(\n            -100,\n            this.stageConfig.height * 0.9,\n            this.stageConfig.width * 1.2,\n            50,\n            floorImg\n          );\n          this.createLeftWall = new Barrier(\n            -800,\n            0,\n            800,\n            this.stageConfig.height,\n            floorImg\n          );\n          this.createRightWall = new Barrier(\n            1000,\n            0,\n            800,\n            this.stageConfig.height,\n            floorImg\n          );\n          this.createPlatform = new Barrier(\n            this.stageConfig.width * 0.4,\n            this.stageConfig.height * 0.6,\n            200,\n            50,\n            platform2Img\n          );\n          this.createPlayer1 = new Player(30, 50, 100, 100, dogImg, dogReverseImg, \"right\");\n          this.createPlayer2 = new Player(855, 50, 100, 100, catImg, catReverseImg, \"left\");\n          this.createSpecialP1 = new SpecialAttack(\n            2000,\n            2000,\n            100,\n            100,\n            bloodBoltRImg,\n            bloodBoltLImg\n          );\n          this.createSpecialP2 = new SpecialAttack(\n            2500,\n            2000,\n            100,\n            100,\n            bloodBoltRImg,\n            bloodBoltLImg\n          );\n          this.createBloodP1 = new SpecialEffects(\n            this.createPlayer1,\n            100,\n            100,\n            bloodImg,\n            3,\n            2\n          );\n          this.createBloodP2 = new SpecialEffects(\n            this.createPlayer2,\n            100,\n            100,\n            bloodImg,\n            3,\n            2\n          );\n          this.createShieldP1 = new SpecialEffects(\n            this.createPlayer1,\n            250,\n            350,\n            shieldImg,\n            17,\n            1\n          );\n          this.createShieldP2 = new SpecialEffects(\n            this.createPlayer2,\n            250,\n            350,\n            shieldImg,\n            17,\n            1\n          );\n          this.createAttackP1 = new SpecialEffects(\n            this.createPlayer1,\n            50,\n            50,\n            attackImg,\n            2,\n            1\n          );\n          this.createAttackP2 = new SpecialEffects(\n            this.createPlayer2,\n            50,\n            50,\n            attackImg,\n            2,\n            1\n          );\n          this.createTree = new Beautify(-2, 255, 200, 200, treeImg);\n          this.createTree2 = new Beautify(800, 255, 200, 200, treeImg);\n          this.createBox = new Beautify(400, 250, 50, 50, boxImg);\n          this.createBirds = new Beautify(900, 55, 100, 100, birdsImg);\n          this.createShrooms = new Beautify(400, 410, 50, 50, shroomsImg);\n          this.createFlowers = new Beautify(920, 405, 50, 50, flowersImg);\n          this.createFlowers2 = new Beautify(200, 405, 50, 50, flowersImg);\n          this.createAttackDropP1 = new Beautify(\n            this.createAttackP1.x,\n            this.createAttackP1.y,\n            100,\n            100,\n            attackDropImg\n          );\n          this.createAttackDropP2 = new Beautify(\n            this.createAttackP2.x,\n            this.createAttackP2.y,\n            100,\n            100,\n            attackDropImg\n          );\n        }\n        animate() {\n            //Update canvas\n            this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height);\n            //Beautify stuffff\n            this.createTree.update(this.ctx);\n            this.createTree2.update(this.ctx);\n            this.createBox.update(this.ctx);\n            this.createBirds.update(this.ctx);\n            this.createShrooms.update(this.ctx);\n            this.createFlowers.update(this.ctx);\n            this.createFlowers2.update(this.ctx);\n            //End stuffff\n            this.createFloor.update(this.ctx);\n            this.createLeftWall.update(this.ctx);\n            this.createRightWall.update(this.ctx);\n            this.createPlatform.update(this.ctx);\n            this.createPlayer1.update(this.ctx);\n            this.createPlayer2.update(this.ctx);\n            this.createSpecialP1.update(this.ctx);\n            this.createSpecialP2.update(this.ctx);\n            this.createBloodP1.update(this.ctx);\n            this.createBloodP2.update(this.ctx);\n            this.createShieldP1.update(this.ctx);\n            this.createShieldP2.update(this.ctx);\n            this.createAttackP1.update(this.ctx);\n            this.createAttackP2.update(this.ctx);\n            this.createAttackDropP1.update(this.ctx);\n            this.createAttackDropP2.update(this.ctx);\n          }\n        }\n\n        let canvasDisplay=new CanvasDisplay();\n\n        let ctx = canvasDisplay.ctx;\n        let player1 = canvasDisplay.createPlayer1;\n        let player2 = canvasDisplay.createPlayer2;\n        let specialP1 = canvasDisplay.createSpecialP1;\n        let specialP2 = canvasDisplay.createSpecialP2;\n        let bloodP1 = canvasDisplay.createBloodP1;\n        let bloodP2 = canvasDisplay.createBloodP2;\n        let shieldP1 = canvasDisplay.createShieldP1;\n        let shieldP2 = canvasDisplay.createShieldP2;\n        let attackP1 = canvasDisplay.createAttackP1;\n        let attackP2 = canvasDisplay.createAttackP2;\n        let attackDropP1 = canvasDisplay.createAttackDropP1;\n        let attackDropP2 = canvasDisplay.createAttackDropP2;\n        \n        let platform = canvasDisplay.createPlatform;\n        let stage = canvasDisplay.createFloor;\n        let leftWall = canvasDisplay.createLeftWall;\n        let rightWall = canvasDisplay.createRightWall;\n        \n        let gameObjects = [\n          canvasDisplay.createPlatform,\n          canvasDisplay.createFloor,\n          canvasDisplay.createLeftWall,\n          canvasDisplay.createRightWall,\n          canvasDisplay.createSpecialP1,\n          canvasDisplay.createSpecialP2,\n          canvasDisplay.createAttackP1,\n          canvasDisplay.createAttackP2,\n        ];\n    \n        \n        function colCheck(shapeA, shapeB) {\n            // get the vectors to check against\n            var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n              vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n              // add the half widths and half heights of the objects\n              hWidths = shapeA.w / 2 + shapeB.w / 2,\n              hHeights = shapeA.h / 2 + shapeB.h / 2,\n              colDir = null;\n          \n            // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n            if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n              // figures out on which side we are colliding (top, bottom, left, or right)\n              var oX = hWidths - Math.abs(vX),\n                oY = hHeights - Math.abs(vY);\n              if (shapeB === attackP1 || shapeB === attackP2) {\n                colDir = \"a\";\n              } else {\n                if (oX >= oY) {\n                  if (vY > 0) {\n                    colDir = \"t\";\n                    shapeA.y += oY;\n                  } else {\n                    colDir = \"b\";\n                    shapeA.y -= oY;\n                  }\n                } else {\n                  if (vX > 0) {\n                    colDir = \"l\";\n                    shapeA.x += oX;\n                  } else {\n                    colDir = \"r\";\n                    shapeA.x -= oX;\n                  }\n                }\n              }\n              return colDir;\n            }\n          }\n          let timeToDissapear = 100;\n          let timeToDissapear1 = 100;\n          let interval = null;\n          let frame = 0;\n          let playerDied = 0;\n          \n          /////////////////////////////////////\n          //////////// Play Game //////////////\n          /////////////////////////////////////\n          function playGame() {\n          \n            /////////\n          /////Fix On load issues for player 1 \n          \n            shieldP1.sh = shieldP1.img.height/shieldP1.numberTall\n            bloodP1.sh=bloodP1.img.height/bloodP1.numberTall\n            bloodP1.sw=bloodP1.img.width/bloodP1.numberWide\n            shieldP1.sw = shieldP1.img.width/shieldP1.numberWide\n            /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n                  then execute move functions in class--- */\n            if (playerDied === 1) {\n            //   setTimeout(killSound.play(), 1000);\n            //   gameOverSound.play();\n              playerDied++;\n            }\n            if (keys[74] && player2.special >= 100) {\n              //special attack\n            //   bloodBlastSound.play();\n              specialP1.reset(player1);\n              player2.special = 0;\n            }\n            if (keys[76] && player2.special > 25) {\n              //attack\n            //   attackSound.play();\n              player2.special -= 25;\n              if (player1.direction === \"right\") {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x + player1.w * 0.8;\n              } else {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x - player1.w * 0.4;\n              }\n              timeToDissapear1 = 100;\n              attackDropP1.reset(player1);\n            } else {\n              timeToDissapear1 -= 4;\n              if (timeToDissapear1 === 0) {\n                attackDropP1.y = -1000;\n                timeToDissapear1 = 100;\n              }\n              attackP1.y = -1000;\n            }\n            if (keys[37]) {\n              leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x - 30 > 0) {\n                player1.moveLeft();\n              }\n            }\n            if (keys[39]) {\n              rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x < 1365) {\n                player1.moveRight();\n              }\n            }\n            if (keys[38]) {\n              upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.y - player1.h > 0) {\n                if (!player1.jumping && player1.grounded) {\n                  player1.grounded = false;\n                  player1.jump();\n                }\n              }\n            }\n            if (keys[40] && player2.special > 10) {\n              downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              shieldP1.x = player1.x;\n              shieldP1.y = player1.y;\n              player1.drawBlockP1();\n              player1.blocking = true;\n              player2.special -= 2;\n            } else {\n              shieldP1.y = -1000;\n              player1.blocking = false;\n            }\n          \n            //PLAYER2\n            if (keys[50] && player1.special >= 100) {\n            //   bloodyBlastSound.play();\n              specialP2.reset(player2);\n              player1.special = 0;\n              console.log(\"i pressed it!\");\n            }\n            if (keys[51] && player1.special > 25) {\n            //   attackSound.play();\n              player1.special -= 25;\n              //attack\n              if (player2.direction === \"right\") {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x + player2.w * 0.8;\n              } else {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x - player2.w * 0.4;\n              }\n              timeToDissapear = 100;\n              attackDropP2.reset(player2);\n            } else {\n              timeToDissapear -= 4;\n              if (timeToDissapear === 0) {\n                attackDropP2.y = -1000;\n                timeToDissapear = 100;\n              }\n              attackP2.y = -1000;\n            }\n          \n            player1.velY += gravity;\n            player1.velX *= friction;\n            player1.grounded = false;\n          \n            if (keys[65]) {\n              aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveLeft();\n            }\n            if (keys[68]) {\n              ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveRight();\n            }\n            if (keys[87]) {\n              wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (!player2.jumping && player2.grounded) {\n                player2.grounded = false;\n                player2.jump();\n              }\n            }\n            if (keys[83] && player1.special > 10) {\n              sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.drawBlockP2();\n              player2.blocking = true;\n              player1.special -= 2;\n            } else {\n              shieldP2.y = -1000;\n              player2.blocking = false;\n            }\n            if (keys[77]) {\n            //   if (backgroundMusic.muted === false) backgroundMusic.muted = true;\n            //   else {\n            //     backgroundMusic.muted = false;\n            //   }\n            }\n          \n            player2.velY += gravity;\n            player2.velX *= friction;\n            player2.grounded = false;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player1, gameObjects[i]);\n              if (i < 4) {\n                if (dir == \"l\" || dir === \"r\") {\n                  player1.velX = 0;\n                  player1.jumping = false;\n                } else if (dir === \"b\") {\n                  player1.grounded = true;\n                  player1.jumping = false;\n                } else if (dir === \"t\") {\n                  player1.velY *= -1;\n                }\n              } else if (i === 5) {\n                if (dir != null) {\n                  player1.receiveDamageP1(3);\n                  specialP2.y = -500;\n                }\n              } else if (i === 7) {\n                if (dir != null) {\n                  player1.receiveDamageP1(1);\n                }\n              }\n            }\n          \n            if (player1.grounded) {\n              player1.velY = 0;\n              player1.idle();\n            }\n          \n            player1.x += player1.velX;\n            player1.y += player1.velY;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player2, gameObjects[i]);\n              if (i < 4) {\n                if (dir ===\"l\" || dir === \"r\") {\n                  player2.velX = 0;\n                  player2.jumping = false;\n                } else if (dir === \"b\") {\n                  player2.grounded = true;\n                  player2.jumping = false;\n                } else if (dir === \"t\") {\n                  player2.velY *= -1;\n                }\n              } else if (i === 4) {\n                if (dir != null) {\n                  player2.receiveDamageP2(3);\n                  specialP1.y = -500;\n                }\n              } else if (i === 6) {\n                if (dir != null) {\n                  player2.receiveDamageP2(1);\n                }\n              }\n            }\n          \n            if (player2.grounded) {\n              player2.velY = 0;\n              player2.idle();\n            }\n          \n            player2.x += player2.velX;\n            player2.y += player2.velY;\n          \n            if (player1.health <= 0) {\n              player1.dead();\n            }\n            if (player2.health <= 0) {\n              player2.dead();\n            }\n            if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n              player1.run();\n            }\n            if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n              player2.run();\n            }\n            // if (player1.grounded === false) {\n            //   player1.fall()\n            // }\n            // if (player2.grounded === false) {\n            //   player2.fall()\n            // }\n          \n            // player1.x\n            // player2.x\n          \n            frame++;\n            // gameOver();\n            interval = requestAnimationFrame(playGame);\n            canvasDisplay.animate();\n          }\n          \n          /////////////////////////////////////\n          /// Key selectors for css anims /////\n          /////////////////////////////////////\n          let leftkey = document.querySelector(\"#leftkey\");\n          let rightkey = document.querySelector(\"#rightkey\");\n          let upkey = document.querySelector(\"#upkey\");\n          let downkey = document.querySelector(\"#downkey\");\n          let aakey = document.querySelector(\"#aakey\");\n          let ddkey = document.querySelector(\"#ddkey\");\n          let wwkey = document.querySelector(\"#wwkey\");\n          let sskey = document.querySelector(\"#sskey\");\n          \n          /////////////////////////////////////\n          /////// Key listeners  //////////////\n          /////////////////////////////////////\n          window.onkeydown = function (e) {\n            keys[e.keyCode] = true;\n          };\n          window.onkeyup = function (e) {\n            keys[e.keyCode] = false;\n            // document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n            // document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n          };\n        playGame();\n        }         \n\n\n    return (\n        <div>\n            <canvas ref={canvasRef} ></canvas>\n            <button onClick={gameStart}>Start Game</button>\n        </div>\n    );\n}\n\nexport default GameWindow;"]},"metadata":{},"sourceType":"module"}