{"ast":null,"code":"var _jsxFileName = \"/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\n\nfunction GameWindow(props) {\n  _s();\n\n  const canvasRef = useRef();\n\n  const gameStart = () => {\n    class SpecialEffects {\n      constructor(player, w, h, img, numberWide, numberTall) {\n        this.x = player.x;\n        this.y = -1000;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n        this.sx = 0;\n        this.sy = 0; //   const reSize = () => {\n        //     this.sw = img.width / numberWide;\n        //     this.sh = img.height / numberTall;\n        //   };\n\n        this.sw = img.width / numberWide;\n        this.sh = img.height / numberTall;\n        this.numberWide = numberWide;\n        this.numberTall = numberTall; //   reSize();\n        //   img.onload = reSize;\n      }\n\n      draw(ctx) {\n        //animate blood\n        if (this.img == blood) {\n          if (frame % 8 == 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw * 2 && this.sy == 0) {\n            this.sx = 0;\n            this.sy = this.sh;\n          } else if (this.sx > this.sw * 2 && this.sy == this.sh) {\n            this.y = -1000;\n          }\n        } else if (this.img == shield) {\n          if (frame % 4 == 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw * 6) {\n            this.sx = this.sw * 4;\n          }\n        } else if (this.img = attack) {\n          if (frame % 4 == 0) {\n            this.sx += this.sw;\n          }\n\n          if (this.sx > this.sw) {\n            this.sx = 0;\n          }\n        } //actually drawing\n\n\n        ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n    }\n\n    class Player {\n      constructor(x, y, w, h, img, rImg, direction) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.velX = 0;\n        this.velY = 0;\n        this.speed = 5;\n        this.jumping = false;\n        this.grounded = false;\n        this.img = img;\n        this.rImg = rImg;\n        this.sx = 0; //frame of animation\n        //   const reSize = () => {\n\n        this.sy = img.height / 5; //animation type\n\n        this.sw = img.width / 10;\n        this.sh = img.height / 5; //   };\n        //   reSize();\n        //   img.onload = reSize;\n\n        this.numberTall = 5;\n        this.numberWide = 10;\n        this.health = 100;\n        this.special = 0;\n        this.keepLooping = true;\n        this.direction = direction;\n        this.blocking = false;\n      }\n\n      draw(ctx) {\n        //dead\n        if (frame % 3 == 0 && this.special < 100) {\n          this.special = this.special + 2;\n\n          if (this.img == cat) {\n            document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n          } else {\n            document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n          }\n        }\n\n        if (this.sy == 0 && frame % 20 == 0) {\n          this.sx += this.sw;\n        } // Idle-foolishness\n        // if (this.sy == this.sh*3 && frame % 10 == 0){\n        //   this.sx += this.sw\n        // }\n\n\n        if (this.sy == this.sh * 4 && frame % 5 == 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx >= (this.numberWide - 1) * this.sw) {\n          if (this.keepLooping) {\n            this.sx = 0;\n          } else {\n            this.sx = (this.numberWide - 1) * this.sw;\n          }\n        }\n\n        if (this.direction == \"left\") {\n          ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        } else {\n          ctx.drawImage(this.rImg, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        }\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n        this.lowHealth();\n      }\n\n      jump() {\n        this.velY = -this.speed * 2;\n        this.y = this.y + this.velY;\n        this.fall();\n      }\n\n      dead() {\n        this.numberWide = 10; //how many dead frames you have\n\n        this.sy = 0;\n        this.keepLooping = false;\n      }\n\n      fall() {\n        this.numberWide = 8;\n        this.sy = this.sh;\n      }\n\n      hurt() {\n        this.numberWide = 10;\n        this.sy = this.sh * 2;\n      }\n\n      idle() {\n        this.numberWide = 10;\n        this.sy = this.sh * 3;\n      }\n\n      run() {\n        this.numberWide = 8;\n        this.sy = this.sh * 4;\n      }\n\n      moveRight() {\n        if (this.velX < 0) {\n          this.velX = 0;\n        }\n\n        if (this.velX < this.speed) {\n          this.velX = this.velX + 4;\n        }\n\n        this.x += this.velX;\n        this.direction = \"right\";\n      }\n\n      moveLeft() {\n        if (this.velX > 0) {\n          this.velX = 0;\n        }\n\n        if (this.velX > -this.speed) {\n          this.velX = this.velX - 4;\n        }\n\n        this.x += this.velX;\n        this.direction = \"left\";\n      }\n\n      receiveDamageP1(multiplier) {\n        if (this.blocking == false) {\n          this.health -= 10 * multiplier; // hit1Sound.play();\n\n          if (player2.direction == \"right\") {\n            this.y -= this.h * 1;\n            this.x += this.w;\n          } else {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          }\n        } else {\n          this.health -= 2 * multiplier; // hit2Sound.play();\n        }\n\n        bloodP1.sx = 0;\n        bloodP1.sy = 0;\n        bloodP1.y = this.y;\n        bloodP1.x = this.x;\n\n        if (this.health < 50) {\n          document.querySelector(\"#hp-1\").style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n          document.querySelector(\".player1\").style.cssText = \"animation: healthGlow 2s infinite;\";\n        }\n\n        document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n      }\n\n      receiveDamageP2(multiplier) {\n        if (this.blocking == false) {\n          this.health -= 10 * multiplier; // hit3Sound.play();\n\n          if (player1.direction == \"right\") {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          } else {\n            this.y -= this.h * 1;\n            this.x -= this.w;\n          }\n        } else {\n          // hit4Sound.play();\n          this.health -= 2 * multiplier;\n        }\n\n        bloodP2.sx = 0;\n        bloodP2.sy = 0;\n        bloodP2.y = this.y;\n        bloodP2.x = this.x;\n\n        if (this.health < 50) {\n          document.querySelector(\"#hp-2\").style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n          document.querySelector(\".player2\").style.cssText = \"animation: healthGlow 2s infinite;\";\n        }\n\n        document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n      }\n\n      drawBlockP1() {\n        shieldP1.sx = shieldP1.sw * 4;\n        shieldP1.sy = 0;\n        shieldP1.y = this.y - this.h * 1.5;\n        shieldP1.x = this.x - this.w * 1.2;\n        this.blocking = true;\n      }\n\n      drawBlockP2() {\n        shieldP2.sx = shieldP2.sw * 4;\n        shieldP2.sy = 0;\n        shieldP2.y = this.y - this.h * 1.5;\n        shieldP2.x = this.x - this.w * 1.05;\n        this.blocking = true;\n      }\n\n      lowHealth() {\n        if (this.health <= 40) {\n          let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n          lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n        }\n      }\n\n    }\n\n    class SpecialAttack {\n      constructor(x, y, w, h, img, img2) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n        this.img2 = img2;\n        this.sx = 0;\n        this.sy = 0; //   const reSize = () => {\n\n        this.sw = 786 / 5;\n        this.sh = 151; //   };\n        //   reSize();\n        //   img.onload = reSize;\n        //   img2.onload= reSize;\n\n        this.direction = null;\n      }\n\n      update(ctx) {\n        this.drawAttack(ctx);\n      }\n\n      drawAttack(ctx) {\n        if (frame % 5 == 0) {\n          this.sx += this.sw;\n        }\n\n        if (this.sx > this.sw * 4) {\n          this.sx = 0;\n        }\n\n        if (this.direction == \"right\") {\n          this.x += 8;\n        } else {\n          this.x -= 8;\n        }\n\n        if (this.direction == \"right\") {\n          ctx.drawImage(this.img, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        } else {\n          ctx.drawImage(this.img2, this.sx, this.sy, this.sw, this.sh, this.x, this.y, this.w, this.h);\n        }\n      }\n\n      reset(player) {\n        this.direction = player.direction;\n\n        if (this.direction == \"right\") {\n          this.x = player.x + player.w;\n        } else {\n          this.x = player.x - player.w;\n        }\n\n        this.y = player.y;\n      }\n\n    }\n\n    class Beautify {\n      constructor(x, y, w, h, img) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n      }\n\n      draw(ctx) {\n        ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n      reset(player) {\n        this.direction = player.direction;\n\n        if (this.direction == \"right\") {\n          this.x = player.x + player.w * 0.5;\n        } else {\n          this.x = player.x - player.w * 0.5;\n        }\n\n        this.y = player.y;\n      }\n\n    }\n\n    class Barrier {\n      constructor(x, y, w, h, img) {\n        this.x = x;\n        this.y = y;\n        this.w = w;\n        this.h = h;\n        this.img = img;\n      }\n\n      draw(ctx) {\n        ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n      }\n\n      update(ctx) {\n        this.draw(ctx);\n      }\n\n    }\n\n    class CanvasDisplay {\n      constructor() {\n        this.canvas = canvasRef.current;\n        this.ctx = this.canvas.getContext(\"2d\");\n        this.stageConfig = {\n          width: 1000,\n          height: 500\n        }; //create game objects to manipulate\n\n        this.canvas.width = this.stageConfig.width;\n        this.canvas.height = this.stageConfig.height;\n        this.createFloor = new Barrier(-100, this.stageConfig.height * 0.9, this.stageConfig.width * 1.2, 50, floor);\n        this.createLeftWall = new Barrier(-800, 0, 800, this.stageConfig.height, floor);\n        this.createRightWall = new Barrier(1000, 0, 800, this.stageConfig.height, floor);\n        this.createPlatform = new Barrier(this.stageConfig.width * 0.4, this.stageConfig.height * 0.6, 200, 50, platform2);\n        this.createPlayer1 = new Player(30, 50, 100, 100, dog, dogReverse, \"right\");\n        this.createPlayer2 = new Player(855, 50, 100, 100, cat, catReverse, \"left\");\n        this.createSpecialP1 = new SpecialAttack(2000, 2000, 100, 100, bloodBoltR, bloodBoltL);\n        this.createSpecialP2 = new SpecialAttack(2500, 2000, 100, 100, bloodBoltR, bloodBoltL);\n        this.createBloodP1 = new SpecialEffects(this.createPlayer1, 100, 100, blood, 3, 2);\n        this.createBloodP2 = new SpecialEffects(this.createPlayer2, 100, 100, blood, 3, 2);\n        this.createShieldP1 = new SpecialEffects(this.createPlayer1, 250, 350, shield, 17, 1);\n        this.createShieldP2 = new SpecialEffects(this.createPlayer2, 250, 350, shield, 17, 1);\n        this.createAttackP1 = new SpecialEffects(this.createPlayer1, 50, 50, attack, 2, 1);\n        this.createAttackP2 = new SpecialEffects(this.createPlayer2, 50, 50, attack, 2, 1);\n        this.createTree = new Beautify(-2, 255, 200, 200, tree);\n        this.createTree2 = new Beautify(800, 255, 200, 200, tree);\n        this.createBox = new Beautify(400, 250, 50, 50, box);\n        this.createBirds = new Beautify(900, 55, 100, 100, birds);\n        this.createShrooms = new Beautify(400, 410, 50, 50, shrooms);\n        this.createFlowers = new Beautify(920, 405, 50, 50, flowers);\n        this.createFlowers2 = new Beautify(200, 405, 50, 50, flowers);\n        this.createAttackDropP1 = new Beautify(this.createAttackP1.x, this.createAttackP1.y, 100, 100, attackDrop);\n        this.createAttackDropP2 = new Beautify(this.createAttackP2.x, this.createAttackP2.y, 100, 100, attackDrop);\n      }\n\n      animate() {\n        //Update canvas\n        this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height); //Beautify stuffff\n\n        this.createTree.update(this.ctx);\n        this.createTree2.update(this.ctx);\n        this.createBox.update(this.ctx);\n        this.createBirds.update(this.ctx);\n        this.createShrooms.update(this.ctx);\n        this.createFlowers.update(this.ctx);\n        this.createFlowers2.update(this.ctx); //End stuffff\n\n        this.createFloor.update(this.ctx);\n        this.createLeftWall.update(this.ctx);\n        this.createRightWall.update(this.ctx);\n        this.createPlatform.update(this.ctx);\n        this.createPlayer1.update(this.ctx);\n        this.createPlayer2.update(this.ctx);\n        this.createSpecialP1.update(this.ctx);\n        this.createSpecialP2.update(this.ctx);\n        this.createBloodP1.update(this.ctx);\n        this.createBloodP2.update(this.ctx);\n        this.createShieldP1.update(this.ctx);\n        this.createShieldP2.update(this.ctx);\n        this.createAttackP1.update(this.ctx);\n        this.createAttackP2.update(this.ctx);\n        this.createAttackDropP1.update(this.ctx);\n        this.createAttackDropP2.update(this.ctx);\n      }\n\n    }\n\n    let canvasDisplay = new CanvasDisplay();\n    let ctx = canvasDisplay.ctx;\n    let player1 = canvasDisplay.createPlayer1;\n    let player2 = canvasDisplay.createPlayer2;\n    let specialP1 = canvasDisplay.createSpecialP1;\n    let specialP2 = canvasDisplay.createSpecialP2;\n    let bloodP1 = canvasDisplay.createBloodP1;\n    let bloodP2 = canvasDisplay.createBloodP2;\n    let shieldP1 = canvasDisplay.createShieldP1;\n    let shieldP2 = canvasDisplay.createShieldP2;\n    let attackP1 = canvasDisplay.createAttackP1;\n    let attackP2 = canvasDisplay.createAttackP2;\n    let attackDropP1 = canvasDisplay.createAttackDropP1;\n    let attackDropP2 = canvasDisplay.createAttackDropP2;\n    let platform = canvasDisplay.createPlatform;\n    let stage = canvasDisplay.createFloor;\n    let leftWall = canvasDisplay.createLeftWall;\n    let rightWall = canvasDisplay.createRightWall;\n    let gameObjects = [canvasDisplay.createPlatform, canvasDisplay.createFloor, canvasDisplay.createLeftWall, canvasDisplay.createRightWall, canvasDisplay.createSpecialP1, canvasDisplay.createSpecialP2, canvasDisplay.createAttackP1, canvasDisplay.createAttackP2];\n\n    function colCheck(shapeA, shapeB) {\n      // get the vectors to check against\n      var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n          vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n          // add the half widths and half heights of the objects\n      hWidths = shapeA.w / 2 + shapeB.w / 2,\n          hHeights = shapeA.h / 2 + shapeB.h / 2,\n          colDir = null; // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n\n      if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n        // figures out on which side we are colliding (top, bottom, left, or right)\n        var oX = hWidths - Math.abs(vX),\n            oY = hHeights - Math.abs(vY);\n\n        if (shapeB == attackP1 || shapeB == attackP2) {\n          colDir = \"a\";\n        } else {\n          if (oX >= oY) {\n            if (vY > 0) {\n              colDir = \"t\";\n              shapeA.y += oY;\n            } else {\n              colDir = \"b\";\n              shapeA.y -= oY;\n            }\n          } else {\n            if (vX > 0) {\n              colDir = \"l\";\n              shapeA.x += oX;\n            } else {\n              colDir = \"r\";\n              shapeA.x -= oX;\n            }\n          }\n        }\n\n        return colDir;\n      }\n    }\n\n    let timeToDissapear = 100;\n    let timeToDissapear1 = 100;\n    let interval = null;\n    let frame = 0;\n    let playerDied = 0; /////////////////////////////////////\n    //////////// Play Game //////////////\n    /////////////////////////////////////\n\n    function playGame() {\n      /////////\n      /////Fix On load issues for player 1 \n      shieldP1.sh = shieldP1.img.height / shieldP1.numberTall;\n      bloodP1.sh = bloodP1.img.height / bloodP1.numberTall;\n      bloodP1.sw = bloodP1.img.width / bloodP1.numberWide;\n      shieldP1.sw = shieldP1.img.width / shieldP1.numberWide;\n      /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n            then execute move functions in class--- */\n\n      if (playerDied == 1) {\n        //   setTimeout(killSound.play(), 1000);\n        //   gameOverSound.play();\n        playerDied++;\n      }\n\n      if (keys[74] && player2.special >= 100) {\n        //special attack\n        //   bloodBlastSound.play();\n        specialP1.reset(player1);\n        player2.special = 0;\n      }\n\n      if (keys[76] && player2.special > 25) {\n        //attack\n        //   attackSound.play();\n        player2.special -= 25;\n\n        if (player1.direction == \"right\") {\n          attackP1.y = player1.y + player1.h / 4;\n          attackP1.x = player1.x + player1.w * 0.8;\n        } else {\n          attackP1.y = player1.y + player1.h / 4;\n          attackP1.x = player1.x - player1.w * 0.4;\n        }\n\n        timeToDissapear1 = 100;\n        attackDropP1.reset(player1);\n      } else {\n        timeToDissapear1 -= 4;\n\n        if (timeToDissapear1 == 0) {\n          attackDropP1.y = -1000;\n          timeToDissapear1 = 100;\n        }\n\n        attackP1.y = -1000;\n      }\n\n      if (keys[37]) {\n        leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.x - 30 > 0) {\n          player1.moveLeft();\n        }\n      }\n\n      if (keys[39]) {\n        rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.x < 1365) {\n          player1.moveRight();\n        }\n      }\n\n      if (keys[38]) {\n        upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (player1.y - player1.h > 0) {\n          if (!player1.jumping && player1.grounded) {\n            player1.grounded = false;\n            player1.jump();\n          }\n        }\n      }\n\n      if (keys[40] && player2.special > 10) {\n        downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        shieldP1.x = player1.x;\n        shieldP1.y = player1.y;\n        player1.drawBlockP1();\n        player1.blocking = true;\n        player2.special -= 2;\n      } else {\n        shieldP1.y = -1000;\n        player1.blocking = false;\n      } //PLAYER2\n\n\n      if (keys[50] && player1.special >= 100) {\n        //   bloodyBlastSound.play();\n        specialP2.reset(player2);\n        player1.special = 0;\n        console.log(\"i pressed it!\");\n      }\n\n      if (keys[51] && player1.special > 25) {\n        //   attackSound.play();\n        player1.special -= 25; //attack\n\n        if (player2.direction == \"right\") {\n          attackP2.y = player2.y + player2.h / 4;\n          attackP2.x = player2.x + player2.w * 0.8;\n        } else {\n          attackP2.y = player2.y + player2.h / 4;\n          attackP2.x = player2.x - player2.w * 0.4;\n        }\n\n        timeToDissapear = 100;\n        attackDropP2.reset(player2);\n      } else {\n        timeToDissapear -= 4;\n\n        if (timeToDissapear == 0) {\n          attackDropP2.y = -1000;\n          timeToDissapear = 100;\n        }\n\n        attackP2.y = -1000;\n      }\n\n      player1.velY += gravity;\n      player1.velX *= friction;\n      player1.grounded = false;\n\n      if (keys[65]) {\n        aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.moveLeft();\n      }\n\n      if (keys[68]) {\n        ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.moveRight();\n      }\n\n      if (keys[87]) {\n        wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n\n        if (!player2.jumping && player2.grounded) {\n          player2.grounded = false;\n          player2.jump();\n        }\n      }\n\n      if (keys[83] && player1.special > 10) {\n        sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n        player2.drawBlockP2();\n        player2.blocking = true;\n        player1.special -= 2;\n      } else {\n        shieldP2.y = -1000;\n        player2.blocking = false;\n      }\n\n      if (keys[77]) {//   if (backgroundMusic.muted == false) backgroundMusic.muted = true;\n        //   else {\n        //     backgroundMusic.muted = false;\n        //   }\n      }\n\n      player2.velY += gravity;\n      player2.velX *= friction;\n      player2.grounded = false;\n\n      for (var i = 0; i < gameObjects.length; i++) {\n        var dir = colCheck(player1, gameObjects[i]);\n\n        if (i < 4) {\n          if (dir === \"l\" || dir === \"r\") {\n            player1.velX = 0;\n            player1.jumping = false;\n          } else if (dir === \"b\") {\n            player1.grounded = true;\n            player1.jumping = false;\n          } else if (dir === \"t\") {\n            player1.velY *= -1;\n          }\n        } else if (i == 5) {\n          if (dir != null) {\n            player1.receiveDamageP1(3);\n            specialP2.y = -500;\n          }\n        } else if (i == 7) {\n          if (dir != null) {\n            player1.receiveDamageP1(1);\n          }\n        }\n      }\n\n      if (player1.grounded) {\n        player1.velY = 0;\n        player1.idle();\n      }\n\n      player1.x += player1.velX;\n      player1.y += player1.velY;\n\n      for (var i = 0; i < gameObjects.length; i++) {\n        var dir = colCheck(player2, gameObjects[i]);\n\n        if (i < 4) {\n          if (dir === \"l\" || dir === \"r\") {\n            player2.velX = 0;\n            player2.jumping = false;\n          } else if (dir === \"b\") {\n            player2.grounded = true;\n            player2.jumping = false;\n          } else if (dir === \"t\") {\n            player2.velY *= -1;\n          }\n        } else if (i == 4) {\n          if (dir != null) {\n            player2.receiveDamageP2(3);\n            specialP1.y = -500;\n          }\n        } else if (i == 6) {\n          if (dir != null) {\n            player2.receiveDamageP2(1);\n          }\n        }\n      }\n\n      if (player2.grounded) {\n        player2.velY = 0;\n        player2.idle();\n      }\n\n      player2.x += player2.velX;\n      player2.y += player2.velY;\n\n      if (player1.health <= 0) {\n        player1.dead();\n      }\n\n      if (player2.health <= 0) {\n        player2.dead();\n      }\n\n      if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n        player1.run();\n      }\n\n      if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n        player2.run();\n      } // if (player1.grounded == false) {\n      //   player1.fall()\n      // }\n      // if (player2.grounded == false) {\n      //   player2.fall()\n      // }\n      // player1.x\n      // player2.x\n\n\n      frame++; // gameOver();\n\n      interval = requestAnimationFrame(playGame);\n      canvasDisplay.animate();\n    } /////////////////////////////////////\n    /// Key selectors for css anims /////\n    /////////////////////////////////////\n\n\n    let leftkey = document.querySelector(\"#leftkey\");\n    let rightkey = document.querySelector(\"#rightkey\");\n    let upkey = document.querySelector(\"#upkey\");\n    let downkey = document.querySelector(\"#downkey\");\n    let aakey = document.querySelector(\"#aakey\");\n    let ddkey = document.querySelector(\"#ddkey\");\n    let wwkey = document.querySelector(\"#wwkey\");\n    let sskey = document.querySelector(\"#sskey\"); /////////////////////////////////////\n    /////// Key listeners  //////////////\n    /////////////////////////////////////\n\n    window.onkeydown = function (e) {\n      keys[e.keyCode] = true;\n    };\n\n    window.onkeyup = function (e) {\n      keys[e.keyCode] = false;\n      document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n      document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"canvas\", {\n      ref: canvasRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 938,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: gameStart,\n      children: \"Start Game\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 939,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 937,\n    columnNumber: 9\n  }, this);\n}\n\n_s(GameWindow, \"hw7YJ5TVw+lAu0tRkzoDS8rL7/E=\");\n\n_c = GameWindow;\nexport default GameWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"GameWindow\");","map":{"version":3,"sources":["/Users/RobertoLT/Desktop/2DFightingGame/2d-fighting-game/src/Components/GameWindow.js"],"names":["React","useRef","useEffect","useState","floor","platform2","dog","dogReverse","cat","catReverse","bloodBoltR","bloodBoltL","blood","shield","attack","tree","box","birds","shrooms","flowers","attackDrop","friction","gravity","keys","GameWindow","props","canvasRef","gameStart","SpecialEffects","constructor","player","w","h","img","numberWide","numberTall","x","y","sx","sy","sw","width","sh","height","draw","ctx","frame","drawImage","update","Player","rImg","direction","velX","velY","speed","jumping","grounded","health","special","keepLooping","blocking","document","querySelector","style","lowHealth","jump","fall","dead","hurt","idle","run","moveRight","moveLeft","receiveDamageP1","multiplier","player2","bloodP1","cssText","receiveDamageP2","player1","bloodP2","drawBlockP1","shieldP1","drawBlockP2","shieldP2","lowHealthDarkBg","animation","SpecialAttack","img2","drawAttack","reset","Beautify","Barrier","CanvasDisplay","canvas","current","getContext","stageConfig","createFloor","createLeftWall","createRightWall","createPlatform","createPlayer1","createPlayer2","createSpecialP1","createSpecialP2","createBloodP1","createBloodP2","createShieldP1","createShieldP2","createAttackP1","createAttackP2","createTree","createTree2","createBox","createBirds","createShrooms","createFlowers","createFlowers2","createAttackDropP1","createAttackDropP2","animate","clearRect","canvasDisplay","specialP1","specialP2","attackP1","attackP2","attackDropP1","attackDropP2","platform","stage","leftWall","rightWall","gameObjects","colCheck","shapeA","shapeB","vX","vY","hWidths","hHeights","colDir","Math","abs","oX","oY","timeToDissapear","timeToDissapear1","interval","playerDied","playGame","leftkey","rightkey","upkey","downkey","console","log","aakey","ddkey","wwkey","sskey","i","length","dir","requestAnimationFrame","window","onkeydown","e","keyCode","onkeyup","removeProperty"],"mappings":"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","sourcesContent":["import React, {useRef,useEffect,useState} from 'react';\nimport floor from '../png-objects/long-platform.png';\nimport platform2 from '../png-objects/short-platform.png';\nimport dog from '../images/dog-l.png';\nimport dogReverse from '../images/dog-r.png';\nimport cat from '../images/kitty-l.png';\nimport catReverse from '../images/kitty-r.png';\nimport bloodBoltR from '../images/blood-blast-r.png';\nimport bloodBoltL from '../images/blood-blast-l.png';\nimport blood from '../images/dropsplash.png';\nimport shield from '../images/explosion.png';\nimport attack from '../images/attack-1.png';\nimport tree from '../png-objects/tree.png';\nimport box from '../png-objects/box.png';\nimport birds from '../png-objects/birds.png';\nimport shrooms from '../png-objects/mushrooms.png';\nimport flowers from '../png-objects/flower.png';\nimport attackDrop from '../images/attack-2.png';\n\n\nlet friction = 0.8;\nlet gravity = 0.3;\nlet keys = [];\n\n\n\n\nfunction GameWindow(props) {\n    const canvasRef=useRef();\n\nconst gameStart=()=>{\n\n \n    class SpecialEffects {\n        constructor(player, w, h, img, numberWide, numberTall) {\n          this.x = player.x;\n          this.y = -1000;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.sx = 0;\n          this.sy = 0;\n        //   const reSize = () => {\n        //     this.sw = img.width / numberWide;\n        //     this.sh = img.height / numberTall;\n        //   };\n        this.sw = img.width / numberWide;\n            this.sh = img.height / numberTall;\n          this.numberWide = numberWide;\n          this.numberTall = numberTall;\n        //   reSize();\n        //   img.onload = reSize;\n        }\n      \n        draw(ctx) {\n          //animate blood\n          if (this.img == blood) {\n            if (frame % 8 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 2 && this.sy == 0) {\n              this.sx = 0;\n              this.sy = this.sh;\n            } else if (this.sx > this.sw * 2 && this.sy == this.sh) {\n              this.y = -1000;\n            }\n          } else if (this.img == shield) {\n            if (frame % 4 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw * 6) {\n              this.sx = this.sw * 4;\n            }\n          } else if ((this.img = attack)) {\n            if (frame % 4 == 0) {\n              this.sx += this.sw;\n            }\n            if (this.sx > this.sw) {\n              this.sx = 0;\n            }\n          }\n      \n          //actually drawing\n          ctx.drawImage(\n            this.img,\n            this.sx,\n            this.sy,\n            this.sw,\n            this.sh,\n            this.x,\n            this.y,\n            this.w,\n            this.h\n          );\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n      class Player {\n        constructor(x, y, w, h, img, rImg, direction) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.velX = 0;\n          this.velY = 0;\n          this.speed = 5;\n          this.jumping = false;\n          this.grounded = false;\n          this.img = img;\n          this.rImg = rImg;\n          this.sx = 0; //frame of animation\n        //   const reSize = () => {\n            this.sy = img.height / 5; //animation type\n            this.sw = img.width / 10;\n            this.sh = img.height / 5;\n        //   };\n        //   reSize();\n        //   img.onload = reSize;\n          this.numberTall = 5;\n          this.numberWide = 10;\n          this.health = 100;\n          this.special = 0;\n          this.keepLooping = true;\n          this.direction = direction;\n          this.blocking = false;\n        }\n      \n        draw(ctx) {\n          //dead\n          if (frame % 3 == 0 && this.special < 100) {\n            this.special = this.special + 2;\n            if (this.img == cat) {\n              document.querySelector(\"#energy-1\").style.width = `${this.special}%`;\n            } else {\n              document.querySelector(\"#energy-2\").style.width = `${this.special}%`;\n            }\n          }\n      \n          if (this.sy == 0 && frame % 20 == 0) {\n            this.sx += this.sw;\n          }\n          // Idle-foolishness\n          // if (this.sy == this.sh*3 && frame % 10 == 0){\n          //   this.sx += this.sw\n          // }\n          if (this.sy == this.sh * 4 && frame % 5 == 0) {\n            this.sx += this.sw;\n          }\n      \n          if (this.sx >= (this.numberWide - 1) * this.sw) {\n            if (this.keepLooping) {\n              this.sx = 0;\n            } else {\n              this.sx = (this.numberWide - 1) * this.sw;\n            }\n          }\n          if (this.direction == \"left\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.rImg,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        update(ctx) {\n          this.draw(ctx);\n          this.lowHealth();\n        }\n        jump() {\n          this.velY = -this.speed * 2;\n          this.y = this.y + this.velY;\n          this.fall();\n        }\n        dead() {\n          this.numberWide = 10; //how many dead frames you have\n          this.sy = 0;\n          this.keepLooping = false;\n        }\n        fall() {\n          this.numberWide = 8;\n          this.sy = this.sh;\n        }\n        hurt() {\n          this.numberWide = 10;\n          this.sy = this.sh * 2;\n        }\n        idle() {\n          this.numberWide = 10;\n          this.sy = this.sh * 3;\n        }\n        run() {\n          this.numberWide = 8;\n          this.sy = this.sh * 4;\n        }\n        moveRight() {\n          if (this.velX < 0) {\n            this.velX = 0;\n          }\n          if (this.velX < this.speed) {\n            this.velX = this.velX + 4;\n          }\n          this.x += this.velX;\n          this.direction = \"right\";\n        }\n        moveLeft() {\n          if (this.velX > 0) {\n            this.velX = 0;\n          }\n          if (this.velX > -this.speed) {\n            this.velX = this.velX - 4;\n          }\n          this.x += this.velX;\n          this.direction = \"left\";\n        }\n        receiveDamageP1(multiplier) {\n          if (this.blocking == false) {\n            this.health -= 10 * multiplier;\n            // hit1Sound.play();\n            if (player2.direction == \"right\") {\n              this.y -= this.h * 1;\n              this.x += this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            this.health -= 2 * multiplier;\n            // hit2Sound.play();\n          }\n          bloodP1.sx = 0;\n          bloodP1.sy = 0;\n          bloodP1.y = this.y;\n          bloodP1.x = this.x;\n          if (this.health < 50) {\n            document.querySelector(\n              \"#hp-1\"\n            ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n            document.querySelector(\".player1\").style.cssText =\n              \"animation: healthGlow 2s infinite;\";\n          }\n          document.querySelector(\"#hp-1\").style.width = `${this.health}%`;\n        }\n        receiveDamageP2(multiplier) {\n          if (this.blocking == false) {\n            this.health -= 10 * multiplier;\n            // hit3Sound.play();\n            if (player1.direction == \"right\") {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            } else {\n              this.y -= this.h * 1;\n              this.x -= this.w;\n            }\n          } else {\n            // hit4Sound.play();\n            this.health -= 2 * multiplier;\n          }\n      \n          bloodP2.sx = 0;\n          bloodP2.sy = 0;\n          bloodP2.y = this.y;\n          bloodP2.x = this.x;\n          if (this.health < 50) {\n            document.querySelector(\n              \"#hp-2\"\n            ).style.cssText = `width: ${this.health}%; background-image: linear-gradient(#ff0404, #ec4141, #f16a63,  #ec4141, #ff0404)`;\n            document.querySelector(\".player2\").style.cssText =\n              \"animation: healthGlow 2s infinite;\";\n          }\n          document.querySelector(\"#hp-2\").style.width = `${this.health}%`;\n        }\n        drawBlockP1() {\n          shieldP1.sx = shieldP1.sw * 4;\n          shieldP1.sy = 0;\n          shieldP1.y = this.y - this.h * 1.5;\n          shieldP1.x = this.x - this.w * 1.2;\n          this.blocking = true;\n        }\n        drawBlockP2() {\n          shieldP2.sx = shieldP2.sw * 4;\n          shieldP2.sy = 0;\n          shieldP2.y = this.y - this.h * 1.5;\n          shieldP2.x = this.x - this.w * 1.05;\n          this.blocking = true;\n        }\n        lowHealth() {\n          if (this.health <= 40) {\n            let lowHealthDarkBg = document.querySelector(\"#low-health-bg\");\n            lowHealthDarkBg.style.animation = \"fade-in 1.5s ease-in forwards\";\n          }\n        }\n      }\n      \n      class SpecialAttack {\n        constructor(x, y, w, h, img, img2) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n          this.img2 = img2;\n          this.sx = 0;\n          this.sy = 0;\n        //   const reSize = () => {\n            this.sw = 786 / 5;\n            this.sh = 151;\n        //   };\n        //   reSize();\n        //   img.onload = reSize;\n        //   img2.onload= reSize;\n          this.direction = null;\n        }\n        update(ctx) {\n          this.drawAttack(ctx);\n        }\n        drawAttack(ctx) {\n          if (frame % 5 == 0) {\n            this.sx += this.sw;\n          }\n          if (this.sx > this.sw * 4) {\n            this.sx = 0;\n          }\n          if (this.direction == \"right\") {\n            this.x += 8;\n          } else {\n            this.x -= 8;\n          }\n          if (this.direction == \"right\") {\n            ctx.drawImage(\n              this.img,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          } else {\n            ctx.drawImage(\n              this.img2,\n              this.sx,\n              this.sy,\n              this.sw,\n              this.sh,\n              this.x,\n              this.y,\n              this.w,\n              this.h\n            );\n          }\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction == \"right\") {\n            this.x = player.x + player.w;\n          } else {\n            this.x = player.x - player.w;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Beautify {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n        draw(ctx) {\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n        reset(player) {\n          this.direction = player.direction;\n          if (this.direction == \"right\") {\n            this.x = player.x + player.w * 0.5;\n          } else {\n            this.x = player.x - player.w * 0.5;\n          }\n          this.y = player.y;\n        }\n      }\n      \n      class Barrier {\n        constructor(x, y, w, h, img) {\n          this.x = x;\n          this.y = y;\n          this.w = w;\n          this.h = h;\n          this.img = img;\n        }\n      \n        draw(ctx) {\n          ctx.drawImage(this.img, this.x, this.y, this.w, this.h);\n        }\n        update(ctx) {\n          this.draw(ctx);\n        }\n      }\n\n    class CanvasDisplay {\n        constructor() {\n          this.canvas = canvasRef.current;\n          this.ctx = this.canvas.getContext(\"2d\");\n          this.stageConfig = {\n            width: 1000,\n            height: 500,\n          };\n      \n          //create game objects to manipulate\n          this.canvas.width = this.stageConfig.width;\n          this.canvas.height = this.stageConfig.height;\n      \n          this.createFloor = new Barrier(\n            -100,\n            this.stageConfig.height * 0.9,\n            this.stageConfig.width * 1.2,\n            50,\n            floor\n          );\n          this.createLeftWall = new Barrier(\n            -800,\n            0,\n            800,\n            this.stageConfig.height,\n            floor\n          );\n          this.createRightWall = new Barrier(\n            1000,\n            0,\n            800,\n            this.stageConfig.height,\n            floor\n          );\n          this.createPlatform = new Barrier(\n            this.stageConfig.width * 0.4,\n            this.stageConfig.height * 0.6,\n            200,\n            50,\n            platform2\n          );\n          this.createPlayer1 = new Player(30, 50, 100, 100, dog, dogReverse, \"right\");\n          this.createPlayer2 = new Player(855, 50, 100, 100, cat, catReverse, \"left\");\n          this.createSpecialP1 = new SpecialAttack(\n            2000,\n            2000,\n            100,\n            100,\n            bloodBoltR,\n            bloodBoltL\n          );\n          this.createSpecialP2 = new SpecialAttack(\n            2500,\n            2000,\n            100,\n            100,\n            bloodBoltR,\n            bloodBoltL\n          );\n          this.createBloodP1 = new SpecialEffects(\n            this.createPlayer1,\n            100,\n            100,\n            blood,\n            3,\n            2\n          );\n          this.createBloodP2 = new SpecialEffects(\n            this.createPlayer2,\n            100,\n            100,\n            blood,\n            3,\n            2\n          );\n          this.createShieldP1 = new SpecialEffects(\n            this.createPlayer1,\n            250,\n            350,\n            shield,\n            17,\n            1\n          );\n          this.createShieldP2 = new SpecialEffects(\n            this.createPlayer2,\n            250,\n            350,\n            shield,\n            17,\n            1\n          );\n          this.createAttackP1 = new SpecialEffects(\n            this.createPlayer1,\n            50,\n            50,\n            attack,\n            2,\n            1\n          );\n          this.createAttackP2 = new SpecialEffects(\n            this.createPlayer2,\n            50,\n            50,\n            attack,\n            2,\n            1\n          );\n          this.createTree = new Beautify(-2, 255, 200, 200, tree);\n          this.createTree2 = new Beautify(800, 255, 200, 200, tree);\n          this.createBox = new Beautify(400, 250, 50, 50, box);\n          this.createBirds = new Beautify(900, 55, 100, 100, birds);\n          this.createShrooms = new Beautify(400, 410, 50, 50, shrooms);\n          this.createFlowers = new Beautify(920, 405, 50, 50, flowers);\n          this.createFlowers2 = new Beautify(200, 405, 50, 50, flowers);\n          this.createAttackDropP1 = new Beautify(\n            this.createAttackP1.x,\n            this.createAttackP1.y,\n            100,\n            100,\n            attackDrop\n          );\n          this.createAttackDropP2 = new Beautify(\n            this.createAttackP2.x,\n            this.createAttackP2.y,\n            100,\n            100,\n            attackDrop\n          );\n        }\n        animate() {\n            //Update canvas\n            this.ctx.clearRect(0, 0, this.stageConfig.width, this.stageConfig.height);\n            //Beautify stuffff\n            this.createTree.update(this.ctx);\n            this.createTree2.update(this.ctx);\n            this.createBox.update(this.ctx);\n            this.createBirds.update(this.ctx);\n            this.createShrooms.update(this.ctx);\n            this.createFlowers.update(this.ctx);\n            this.createFlowers2.update(this.ctx);\n            //End stuffff\n            this.createFloor.update(this.ctx);\n            this.createLeftWall.update(this.ctx);\n            this.createRightWall.update(this.ctx);\n            this.createPlatform.update(this.ctx);\n            this.createPlayer1.update(this.ctx);\n            this.createPlayer2.update(this.ctx);\n            this.createSpecialP1.update(this.ctx);\n            this.createSpecialP2.update(this.ctx);\n            this.createBloodP1.update(this.ctx);\n            this.createBloodP2.update(this.ctx);\n            this.createShieldP1.update(this.ctx);\n            this.createShieldP2.update(this.ctx);\n            this.createAttackP1.update(this.ctx);\n            this.createAttackP2.update(this.ctx);\n            this.createAttackDropP1.update(this.ctx);\n            this.createAttackDropP2.update(this.ctx);\n          }\n        }\n\n        let canvasDisplay=new CanvasDisplay();\n\n        let ctx = canvasDisplay.ctx;\n        let player1 = canvasDisplay.createPlayer1;\n        let player2 = canvasDisplay.createPlayer2;\n        let specialP1 = canvasDisplay.createSpecialP1;\n        let specialP2 = canvasDisplay.createSpecialP2;\n        let bloodP1 = canvasDisplay.createBloodP1;\n        let bloodP2 = canvasDisplay.createBloodP2;\n        let shieldP1 = canvasDisplay.createShieldP1;\n        let shieldP2 = canvasDisplay.createShieldP2;\n        let attackP1 = canvasDisplay.createAttackP1;\n        let attackP2 = canvasDisplay.createAttackP2;\n        let attackDropP1 = canvasDisplay.createAttackDropP1;\n        let attackDropP2 = canvasDisplay.createAttackDropP2;\n        \n        let platform = canvasDisplay.createPlatform;\n        let stage = canvasDisplay.createFloor;\n        let leftWall = canvasDisplay.createLeftWall;\n        let rightWall = canvasDisplay.createRightWall;\n        \n        let gameObjects = [\n          canvasDisplay.createPlatform,\n          canvasDisplay.createFloor,\n          canvasDisplay.createLeftWall,\n          canvasDisplay.createRightWall,\n          canvasDisplay.createSpecialP1,\n          canvasDisplay.createSpecialP2,\n          canvasDisplay.createAttackP1,\n          canvasDisplay.createAttackP2,\n        ];\n    \n        \n        function colCheck(shapeA, shapeB) {\n            // get the vectors to check against\n            var vX = shapeA.x + shapeA.w / 2 - (shapeB.x + shapeB.w / 2),\n              vY = shapeA.y + shapeA.h / 2 - (shapeB.y + shapeB.h / 2),\n              // add the half widths and half heights of the objects\n              hWidths = shapeA.w / 2 + shapeB.w / 2,\n              hHeights = shapeA.h / 2 + shapeB.h / 2,\n              colDir = null;\n          \n            // if the x and y vector are less than the half width or half height, they we must be inside the object, causing a collision\n            if (Math.abs(vX) < hWidths && Math.abs(vY) < hHeights) {\n              // figures out on which side we are colliding (top, bottom, left, or right)\n              var oX = hWidths - Math.abs(vX),\n                oY = hHeights - Math.abs(vY);\n              if (shapeB == attackP1 || shapeB == attackP2) {\n                colDir = \"a\";\n              } else {\n                if (oX >= oY) {\n                  if (vY > 0) {\n                    colDir = \"t\";\n                    shapeA.y += oY;\n                  } else {\n                    colDir = \"b\";\n                    shapeA.y -= oY;\n                  }\n                } else {\n                  if (vX > 0) {\n                    colDir = \"l\";\n                    shapeA.x += oX;\n                  } else {\n                    colDir = \"r\";\n                    shapeA.x -= oX;\n                  }\n                }\n              }\n              return colDir;\n            }\n          }\n          let timeToDissapear = 100;\n          let timeToDissapear1 = 100;\n          let interval = null;\n          let frame = 0;\n          let playerDied = 0;\n          \n          /////////////////////////////////////\n          //////////// Play Game //////////////\n          /////////////////////////////////////\n          function playGame() {\n          \n            /////////\n          /////Fix On load issues for player 1 \n          \n            shieldP1.sh = shieldP1.img.height/shieldP1.numberTall\n            bloodP1.sh=bloodP1.img.height/bloodP1.numberTall\n            bloodP1.sw=bloodP1.img.width/bloodP1.numberWide\n            shieldP1.sw = shieldP1.img.width/shieldP1.numberWide\n            /*--- key press codes, if true which is set on keydown, will check to see if player1 is within canvas, \n                  then execute move functions in class--- */\n            if (playerDied == 1) {\n            //   setTimeout(killSound.play(), 1000);\n            //   gameOverSound.play();\n              playerDied++;\n            }\n            if (keys[74] && player2.special >= 100) {\n              //special attack\n            //   bloodBlastSound.play();\n              specialP1.reset(player1);\n              player2.special = 0;\n            }\n            if (keys[76] && player2.special > 25) {\n              //attack\n            //   attackSound.play();\n              player2.special -= 25;\n              if (player1.direction == \"right\") {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x + player1.w * 0.8;\n              } else {\n                attackP1.y = player1.y + player1.h / 4;\n                attackP1.x = player1.x - player1.w * 0.4;\n              }\n              timeToDissapear1 = 100;\n              attackDropP1.reset(player1);\n            } else {\n              timeToDissapear1 -= 4;\n              if (timeToDissapear1 == 0) {\n                attackDropP1.y = -1000;\n                timeToDissapear1 = 100;\n              }\n              attackP1.y = -1000;\n            }\n            if (keys[37]) {\n              leftkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x - 30 > 0) {\n                player1.moveLeft();\n              }\n            }\n            if (keys[39]) {\n              rightkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.x < 1365) {\n                player1.moveRight();\n              }\n            }\n            if (keys[38]) {\n              upkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (player1.y - player1.h > 0) {\n                if (!player1.jumping && player1.grounded) {\n                  player1.grounded = false;\n                  player1.jump();\n                }\n              }\n            }\n            if (keys[40] && player2.special > 10) {\n              downkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              shieldP1.x = player1.x;\n              shieldP1.y = player1.y;\n              player1.drawBlockP1();\n              player1.blocking = true;\n              player2.special -= 2;\n            } else {\n              shieldP1.y = -1000;\n              player1.blocking = false;\n            }\n          \n            //PLAYER2\n            if (keys[50] && player1.special >= 100) {\n            //   bloodyBlastSound.play();\n              specialP2.reset(player2);\n              player1.special = 0;\n              console.log(\"i pressed it!\");\n            }\n            if (keys[51] && player1.special > 25) {\n            //   attackSound.play();\n              player1.special -= 25;\n              //attack\n              if (player2.direction == \"right\") {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x + player2.w * 0.8;\n              } else {\n                attackP2.y = player2.y + player2.h / 4;\n                attackP2.x = player2.x - player2.w * 0.4;\n              }\n              timeToDissapear = 100;\n              attackDropP2.reset(player2);\n            } else {\n              timeToDissapear -= 4;\n              if (timeToDissapear == 0) {\n                attackDropP2.y = -1000;\n                timeToDissapear = 100;\n              }\n              attackP2.y = -1000;\n            }\n          \n            player1.velY += gravity;\n            player1.velX *= friction;\n            player1.grounded = false;\n          \n            if (keys[65]) {\n              aakey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveLeft();\n            }\n            if (keys[68]) {\n              ddkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.moveRight();\n            }\n            if (keys[87]) {\n              wwkey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              if (!player2.jumping && player2.grounded) {\n                player2.grounded = false;\n                player2.jump();\n              }\n            }\n            if (keys[83] && player1.special > 10) {\n              sskey.style.animation = \"buttonGlow 5s alternate-reverse\";\n              player2.drawBlockP2();\n              player2.blocking = true;\n              player1.special -= 2;\n            } else {\n              shieldP2.y = -1000;\n              player2.blocking = false;\n            }\n            if (keys[77]) {\n            //   if (backgroundMusic.muted == false) backgroundMusic.muted = true;\n            //   else {\n            //     backgroundMusic.muted = false;\n            //   }\n            }\n          \n            player2.velY += gravity;\n            player2.velX *= friction;\n            player2.grounded = false;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player1, gameObjects[i]);\n              if (i < 4) {\n                if (dir === \"l\" || dir === \"r\") {\n                  player1.velX = 0;\n                  player1.jumping = false;\n                } else if (dir === \"b\") {\n                  player1.grounded = true;\n                  player1.jumping = false;\n                } else if (dir === \"t\") {\n                  player1.velY *= -1;\n                }\n              } else if (i == 5) {\n                if (dir != null) {\n                  player1.receiveDamageP1(3);\n                  specialP2.y = -500;\n                }\n              } else if (i == 7) {\n                if (dir != null) {\n                  player1.receiveDamageP1(1);\n                }\n              }\n            }\n          \n            if (player1.grounded) {\n              player1.velY = 0;\n              player1.idle();\n            }\n          \n            player1.x += player1.velX;\n            player1.y += player1.velY;\n          \n            for (var i = 0; i < gameObjects.length; i++) {\n              var dir = colCheck(player2, gameObjects[i]);\n              if (i < 4) {\n                if (dir === \"l\" || dir === \"r\") {\n                  player2.velX = 0;\n                  player2.jumping = false;\n                } else if (dir === \"b\") {\n                  player2.grounded = true;\n                  player2.jumping = false;\n                } else if (dir === \"t\") {\n                  player2.velY *= -1;\n                }\n              } else if (i == 4) {\n                if (dir != null) {\n                  player2.receiveDamageP2(3);\n                  specialP1.y = -500;\n                }\n              } else if (i == 6) {\n                if (dir != null) {\n                  player2.receiveDamageP2(1);\n                }\n              }\n            }\n          \n            if (player2.grounded) {\n              player2.velY = 0;\n              player2.idle();\n            }\n          \n            player2.x += player2.velX;\n            player2.y += player2.velY;\n          \n            if (player1.health <= 0) {\n              player1.dead();\n            }\n            if (player2.health <= 0) {\n              player2.dead();\n            }\n            if ((player1.velX > 0.3 || player1.velX < -0.3) && player1.grounded) {\n              player1.run();\n            }\n            if ((player2.velX > 0.3 || player2.velX < -0.3) && player2.grounded) {\n              player2.run();\n            }\n            // if (player1.grounded == false) {\n            //   player1.fall()\n            // }\n            // if (player2.grounded == false) {\n            //   player2.fall()\n            // }\n          \n            // player1.x\n            // player2.x\n          \n            frame++;\n            // gameOver();\n            interval = requestAnimationFrame(playGame);\n            canvasDisplay.animate();\n          }\n          \n          /////////////////////////////////////\n          /// Key selectors for css anims /////\n          /////////////////////////////////////\n          let leftkey = document.querySelector(\"#leftkey\");\n          let rightkey = document.querySelector(\"#rightkey\");\n          let upkey = document.querySelector(\"#upkey\");\n          let downkey = document.querySelector(\"#downkey\");\n          let aakey = document.querySelector(\"#aakey\");\n          let ddkey = document.querySelector(\"#ddkey\");\n          let wwkey = document.querySelector(\"#wwkey\");\n          let sskey = document.querySelector(\"#sskey\");\n          \n          /////////////////////////////////////\n          /////// Key listeners  //////////////\n          /////////////////////////////////////\n          window.onkeydown = function (e) {\n            keys[e.keyCode] = true;\n          };\n          window.onkeyup = function (e) {\n            keys[e.keyCode] = false;\n            document.querySelector(\"#leftkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#rightkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#upkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#downkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#aakey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#ddkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#wwkey\").style.removeProperty(\"animation\");\n            document.querySelector(\"#sskey\").style.removeProperty(\"animation\");\n          };\n          \n        }         \n\n\n    return (\n        <div>\n            <canvas ref={canvasRef} ></canvas>\n            <button onClick={gameStart}>Start Game</button>\n        </div>\n    );\n}\n\nexport default GameWindow;"]},"metadata":{},"sourceType":"module"}